{"version":3,"sources":["../bower_components/angular-foundation-6/dist/angular-foundation.js"],"names":["global","factory","define","amd","exports","mod","angularFoundation","this","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","AccordionController","$scope","$attrs","accordionConfig","groups","closeOthers","openGroup","angular","isDefined","$eval","forEach","group","isOpen","addGroup","groupScope","push","removeGroup","index","indexOf","splice","DropdownToggleController","mediaQueries","$element","$position","$timeout","$transclude","dropdownPaneOffset","close","e","$ctrl","active","$emit","closeOnClick","$body","off","deRegisterCloseListener","elementContents","prototype","slice","apply","querySelectorAll","every","node","target","$apply","positionPane","offset_","offset","paneOffset","dropdownTrigger","element","querySelector","triggerPosition","position","css","top","height","paneAlign","left","width","transform","hoverTimeout","document","clone","tScope","append","parent","$close","$onDestroy","toggle","on","$on","mouseover","cancel","mouseleave","dropdownToggle","$document","$window","$location","scope","restrict","bindToController","toggleOnHover","transclude","pane","templateUrl","controller","controllerAs","orbit","_this2","container","overflow","setContainer","container_","orbitBullets","orbitContainer","$interval","$swipe","_this3","slides","currentIdx","skipInterval","addSlide","slide","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","activateState","pct","prevState","nextState","stopAutoPlay","autoSlider","restartTimer","startPos","nextIdx","bind","start","pos","addClass","move","pctDist","x","offsetWidth","roundFn","Math","floor","ceil","end","removeClass","$onInit","$watch","orbitSlide","vm","float","orbitPrevious","cursor","orbitNext","$inject","Object","defineProperty","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","_typeof","obj","constructor","module","constant","directive","replace","require","accordion","heading","$parse","setHTMLHeading","HTMLHeading","event","getIsOpen","setIsOpen","assign","$parent","template","link","attr","accordionGroupCtrl","accordionGroupController","html","run","$templateCache","put","closeable","type","data","bindHtmlUnsafe","activeClass","toggleEvent","buttonConfig","attrs","ctrls","buttonsCtrl","ngModelCtrl","$render","toggleClass","equals","$modelValue","btnRadio","hasClass","$setViewValue","getTrueValue","getCheckboxValue","btnCheckboxTrue","attributeValue","defaultValue","val","btnCheckboxFalse","$compile","openMenu","ulChild","EVENTS","_emitEvent","open","closeMenu","ulParent","one","hide","reportChild","child","childMenus","doResize","sizeChild","rect","getBoundingClientRect","maxHeight","max","maxWidth","max-width","min-height","minHeight","drilldownMenuApi","resize","show","hideAll","doCloseAll","resizeMenu","EVENT_BASE","name","_len","arguments","args","_key","newArgs","concat","$postLink","generatedWrapper","drilldownMenu","nodeName","wrap","onClickBack","stopImmediatePropagation","preventDefault","onClickOpen","elementBack","generatedBack","children","elementChild","prepend","elementClasses","remove","disableHover","disableClickOpen","closingTime","opensLeft","dropdownMenu","mouseLeaveTimeout","topLevel","hasAttribute","matchMedia","doc","bool","docElem","documentElement","refNode","firstElementChild","firstChild","fakeBody","createElement","div","id","style","cssText","background","appendChild","q","innerHTML","insertBefore","removeChild","matches","media","head","namedQueries","str","styleObject","trim","split","reduce","ret","param","parts","decodeURIComponent","hasOwnProperty","parseStyleToObject","getComputedStyle","fontFamily","queries","getCurrentSize","matched","query","atLeast","size","get","window","mobileSniff","test","navigator","userAgent","StackedMap","instance","TypeError","_classCallCheck","stack","find","s","map","filter","$modalStack","evt","modal","getTop","backdrop","currentTarget","stopPropagation","dismiss","windowClass","isTop","modalScope","$rootScope","$animate","$q","resizeHandler","opened","openedWindows","keys","eq","modalPos","reposition","removeModalWindow","modalInstance","modalWindow","backdropDomEl","leave","then","backdropScope","$destroy","body","OPENED_MODAL_CLASS","isMobile","originalScrollPos","scrollTop","unbind","modalDomEl","getModalCenter","options","el","windowWidth","clientWidth","windowHeight","clientHeight","offsetHeight","parseInt","which","keyboard","list","loadFocusElementList","focusChanged","shiftKey","isFocusInFirstItem","isModalFocused","focusLastFocusableElement","isFocusInLastItem","focusFirstFocusableElement","modalDomE1","elements","getClientRects","isVisible","srcElement","focus","deferred","add","topBackdropIndex","backdropIndex","$new","classes","window-class","join","content","detach","visibility","display","z-index","promises","enter","lastChild","modalParent","pageYOffset","all","focusedElem","y","result","resolve","reason","reject","dismissAll","leaveOpenIds","some","skipIds","provider","_this","$get","$injector","$http","$controller","$modal","modalOpts","modalResultDeferred","defer","modalOpenedDeferred","promise","modalOptions","extend","Error","cache","getTemplatePromise","resolves","promisesArr","isFunction","when","invoke","getResolvePromises","tplAndVars","$dismiss","ctrlInstance","ctrlLocals","resolveIter","$modalInstance","disableAutoClose","right","inner","exitOverlay","leftToggle","rightToggle","win","offCanvasWrapper","offCanvas","$interpolate","self","setNumPages","numPages","noop","init","defaultItemsPerPage","itemsPerPage","totalPages","calculateTotalPages","noPrevious","page","noNext","isActive","totalItems","getAttributeValue","attribute","interpolate","render","pages","getPages","selectPage","onSelectPage","boundaryLinks","directionLinks","firstText","previousText","nextText","lastText","rotate","paginationConfig","paginationCtrl","makePage","number","text","isDisabled","disabled","maxSize","currentPage","startPage","endPage","isMaxSized","min","previousPageSet","unshift","nextPageSet","previousPage","nextPage","firstPage","lastPage","align","pagerConfig","isPrevious","isNext","previous","isStaticPositioned","cssprop","currentStyle","getStyle","elBCR","offsetParentBCR","offsetParentEl","docDomEl","offsetParent","parentOffsetEl","clientTop","clientLeft","scrollLeft","boundingClientRect","prop","pageXOffset","animate","progressConfig","bars","addBar","bar","oldValue","$index","update","removeBar","newValue","percent","getPercentage","transition","round","progressCtrl","stateOn","stateOff","ratingConfig","maxRange","createRateObjects","states","defaultOptions","n","range","ratingStates","copy","rate","readonly","onHover","reset","onLeave","ctrl","tabs","isUndefined","openOnLoad","select","tab","addTab","removeTab","newActiveIndex","elem","vertical","justified","onSelect","onDeselect","compile","elm","tabsetCtrl","getActive","setActive","oldVal","$transcludeFn","tabCtrl","tabContentTransclude","contents","tagName","toLowerCase","isTabHeading","headingElement","placement","popupDelay","triggerMap","click","globalOptions","setTriggers","triggers","prefix","defaultTriggerShow","getTriggers","trigger","directiveName","letter","snake_case","startSym","startSymbol","endSym","endSymbol","tElem","tooltipLinker","toggleTooltipBind","tt_isOpen","hideTooltipBind","showTooltipBind","hasEnableExp","tt_popupDelay","popupTimeout","tt_content","tooltip","removeTooltip","$digest","createTooltip","appendToBody","positionTooltip","ttWidth","ttHeight","ttPosition","tt_placement","tt_remSize","parseFloat","fontSize","$observe","tt_title","delay","isNaN","unregisterTriggers","showTrigger","hideTrigger","$tooltip"],"mappings":"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","file":"angular-foundation-6.js","sourcesContent":["(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports);\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports);\n        global.angularFoundation = mod.exports;\n    }\n})(this, function (exports) {\n    'use strict';\n\n    AccordionController.$inject = ['$scope', '$attrs', 'accordionConfig'];\n    DropdownToggleController.$inject = ['$scope', '$attrs', 'mediaQueries', '$element', '$position', '$timeout', '$transclude', 'dropdownPaneOffset'];\n    dropdownToggle.$inject = ['$document', '$window', '$location'];\n    orbit.$inject = ['$element'];\n    orbitBullets.$inject = ['$element'];\n    orbitContainer.$inject = ['$element', '$interval', '$scope', '$swipe'];\n    orbitSlide.$inject = ['$element'];\n    orbitPrevious.$inject = ['$element'];\n    orbitNext.$inject = ['$element'];\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n        }\n    }\n\n    var _createClass = function () {\n        function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n                var descriptor = props[i];\n                descriptor.enumerable = descriptor.enumerable || false;\n                descriptor.configurable = true;\n                if (\"value\" in descriptor) descriptor.writable = true;\n                Object.defineProperty(target, descriptor.key, descriptor);\n            }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n        };\n    }();\n\n    var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n        return typeof obj;\n    } : function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    function _toConsumableArray(arr) {\n        if (Array.isArray(arr)) {\n            for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n                arr2[i] = arr[i];\n            }\n\n            return arr2;\n        } else {\n            return Array.from(arr);\n        }\n    }\n\n    /*\n     * angular-foundation-6\n     * http://circlingthesun.github.io/angular-foundation-6/\n    \n     * Version: 0.11.16 - 2017-12-19\n     * License: MIT\n     * (c) \n     */\n\n    function AccordionController($scope, $attrs, accordionConfig) {\n        'ngInject';\n\n        var $ctrl = this;\n        // This array keeps track of the accordion groups\n        $ctrl.groups = [];\n\n        // Ensure that all the groups in this accordion are closed, unless close-others explicitly says not to\n        $ctrl.closeOthers = function (openGroup) {\n            var closeOthers = angular.isDefined($attrs.closeOthers) ? $scope.$eval($attrs.closeOthers) : accordionConfig.closeOthers;\n            if (closeOthers) {\n                angular.forEach(this.groups, function (group) {\n                    if (group !== openGroup) {\n                        group.isOpen = false;\n                    }\n                });\n            }\n        };\n\n        // This is called from the accordion-group directive to add itself to the accordion\n        $ctrl.addGroup = function (groupScope) {\n            var that = this;\n            this.groups.push(groupScope);\n        };\n\n        // This is called from the accordion-group directive when to remove itself\n        $ctrl.removeGroup = function (group) {\n            var index = this.groups.indexOf(group);\n            if (index !== -1) {\n                this.groups.splice(index, 1);\n            }\n        };\n    }\n\n    angular.module('mm.foundation.accordion', []).constant('accordionConfig', {\n        closeOthers: true\n    }).controller('AccordionController', AccordionController)\n\n    // The accordion directive simply sets up the directive controller\n    // and adds an accordion CSS class to itself element.\n    .directive('accordion', function () {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            controller: AccordionController,\n            controllerAs: '$ctrl',\n            transclude: true,\n            replace: false,\n            templateUrl: 'template/accordion/accordion.html'\n        };\n    })\n\n    // The accordion-group directive indicates a block of html that will expand and collapse in an accordion\n    .directive('accordionGroup', function () {\n        'ngInject';\n\n        return {\n            require: { 'accordion': '^accordion' }, // We need this directive to be inside an accordion\n            restrict: 'EA',\n            transclude: true, // It transcludes the contents of the directive into the template\n            replace: true, // The element containing the directive will be replaced with the template\n            templateUrl: 'template/accordion/accordion-group.html',\n            scope: {},\n            controllerAs: \"$ctrl\",\n            bindToController: {\n                heading: '@'\n            }, // Create an isolated scope and interpolate the heading attribute onto this scope\n            controller: ['$scope', '$element', '$attrs', '$parse', function accordionGroupController($scope, $element, $attrs, $parse) {\n                'ngInject';\n\n                var $ctrl = this;\n                $ctrl.isOpen = false;\n\n                $ctrl.setHTMLHeading = function (element) {\n                    $ctrl.HTMLHeading = element;\n                };\n\n                $ctrl.$onInit = function () {\n                    $ctrl.accordion.addGroup($ctrl);\n\n                    $scope.$on('$destroy', function (event) {\n                        $ctrl.accordion.removeGroup($ctrl);\n                    });\n\n                    var getIsOpen;\n                    var setIsOpen;\n\n                    if ($attrs.isOpen) {\n                        getIsOpen = $parse($attrs.isOpen);\n                        setIsOpen = getIsOpen.assign;\n\n                        $scope.$parent.$watch(getIsOpen, function (value) {\n                            $ctrl.isOpen = !!value;\n                        });\n                    }\n\n                    $scope.$watch(function () {\n                        return $ctrl.isOpen;\n                    }, function (value) {\n                        if (value) {\n                            $ctrl.accordion.closeOthers($ctrl);\n                        }\n                        setIsOpen && setIsOpen($scope.$parent, value);\n\n                        if (value) {\n                            $scope.$emit('down.af.accordionGroup', $element, $scope);\n                        } else {\n                            $scope.$emit('up.af.accordionGroup', $element, $scope);\n                        }\n                    });\n                };\n            }]\n        };\n    })\n\n    // Use accordion-heading below an accordion-group to provide a heading containing HTML\n    // <accordion-group>\n    //   <accordion-heading>Heading containing HTML - <img src=\"...\"></accordion-heading>\n    // </accordion-group>\n    .directive('accordionHeading', function () {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            transclude: true, // Grab the contents to be used as the heading\n            template: '', // In effect remove this element!\n            replace: true,\n            require: '^accordionGroup',\n            link: function link(scope, element, attr, accordionGroupCtrl, transclude) {\n                // Pass the heading to the accordion-group controller\n                // so that it can be transcluded into the right place in the template\n                // [The second parameter to transclude causes the elements to be cloned so that they work in ng-repeat]\n                accordionGroupCtrl.setHTMLHeading(transclude(scope, function () {}));\n            }\n        };\n    })\n\n    // Use in the accordion-group template to indicate where you want the heading to be transcluded\n    // You must provide the property on the accordion-group controller that will hold the transcluded element\n    // <div class=\"accordion-group\">\n    //   <div class=\"accordion-heading\" ><a ... accordion-transclude=\"heading\">...</a></div>\n    //   ...\n    // </div>\n    .directive('accordionTransclude', function () {\n        'ngInject';\n\n        return {\n            require: '^accordionGroup',\n            link: function link(scope, element, attr, accordionGroupController) {\n                scope.$watch(function () {\n                    return accordionGroupController.HTMLHeading;\n                }, function (heading) {\n                    if (heading) {\n                        element.html('');\n                        element.append(heading);\n                    }\n                });\n            }\n        };\n    });\n\n    (function () {\n        angular.module(\"mm.foundation.accordion\").run([\"$templateCache\", function ($templateCache) {\n            $templateCache.put(\"template/accordion/accordion-group.html\", \"<li class=\\\"accordion-item\\\" ng-class=\\\"{ \\'is-active\\': $ctrl.isOpen }\\\">\\n  <a ng-click=\\\"$ctrl.isOpen = !$ctrl.isOpen\\\" class=\\\"accordion-title\\\" accordion-transclude>{{$ctrl.heading}}</a>\\n  <div class=\\\"accordion-content\\\" style=\\\"display: block;\\\" ng-show=\\\"$ctrl.isOpen\\\" ng-transclude></div>\\n</li>\\n\");\n            $templateCache.put(\"template/accordion/accordion.html\", \"<ul class=\\\"accordion\\\" ng-transclude></ul>\\n\");\n        }]);\n    })();\n    angular.module(\"mm.foundation.alert\", []).controller('AlertController', ['$scope', '$attrs', function ($scope, $attrs) {\n        'ngInject';\n\n        $scope.closeable = 'close' in $attrs && typeof $attrs.close !== \"undefined\";\n    }]).directive('alert', function () {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            controller: 'AlertController',\n            templateUrl: 'template/alert/alert.html',\n            transclude: true,\n            replace: true,\n            scope: {\n                type: '=',\n                close: '&'\n            }\n        };\n    });\n\n    (function () {\n        angular.module(\"mm.foundation.alert\").run([\"$templateCache\", function ($templateCache) {\n            $templateCache.put(\"template/alert/alert.html\", \"<div class=\\\"callout\\\" ng-class=\\'(type || \\\"\\\")\\'>\\n  <span ng-transclude></span>\\n  <button ng-click=\\\"close()\\\" ng-show=\\\"closeable\\\" class=\\\"close-button\\\" aria-label=\\\"Close alert\\\" type=\\\"button\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n\");\n        }]);\n    })();\n    angular.module('mm.foundation.bindHtml', []).directive('bindHtmlUnsafe', function () {\n        'ngInject';\n\n        return function (scope, element, attr) {\n            element.addClass('ng-binding').data('$binding', attr.bindHtmlUnsafe);\n            scope.$watch(attr.bindHtmlUnsafe, function bindHtmlUnsafeWatchAction(value) {\n                element.html(value || '');\n            });\n        };\n    });\n\n    angular.module('mm.foundation.buttons', []).constant('buttonConfig', {\n        activeClass: 'hollow',\n        toggleEvent: 'click'\n    }).controller('ButtonsController', ['buttonConfig', function (buttonConfig) {\n        this.activeClass = buttonConfig.activeClass;\n        this.toggleEvent = buttonConfig.toggleEvent;\n    }]).directive('btnRadio', function () {\n        'ngInject';\n\n        return {\n            require: ['btnRadio', 'ngModel'],\n            controller: 'ButtonsController',\n            link: function link(scope, element, attrs, ctrls) {\n                var buttonsCtrl = ctrls[0],\n                    ngModelCtrl = ctrls[1];\n\n                //model -> UI\n                ngModelCtrl.$render = function () {\n                    element.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, scope.$eval(attrs.btnRadio)));\n                };\n\n                //ui->model\n                element.bind(buttonsCtrl.toggleEvent, function () {\n                    if (!element.hasClass(buttonsCtrl.activeClass)) {\n                        scope.$apply(function () {\n                            ngModelCtrl.$setViewValue(scope.$eval(attrs.btnRadio));\n                            ngModelCtrl.$render();\n                        });\n                    }\n                });\n            }\n        };\n    }).directive('btnCheckbox', function () {\n        'ngInject';\n\n        return {\n            require: ['btnCheckbox', 'ngModel'],\n            controller: 'ButtonsController',\n            link: function link(scope, element, attrs, ctrls) {\n                var buttonsCtrl = ctrls[0],\n                    ngModelCtrl = ctrls[1];\n\n                function getTrueValue() {\n                    return getCheckboxValue(attrs.btnCheckboxTrue, true);\n                }\n\n                function getFalseValue() {\n                    return getCheckboxValue(attrs.btnCheckboxFalse, false);\n                }\n\n                function getCheckboxValue(attributeValue, defaultValue) {\n                    var val = scope.$eval(attributeValue);\n                    return angular.isDefined(val) ? val : defaultValue;\n                }\n\n                //model -> UI\n                ngModelCtrl.$render = function () {\n                    element.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, getTrueValue()));\n                };\n\n                //ui->model\n                element.bind(buttonsCtrl.toggleEvent, function () {\n                    scope.$apply(function () {\n                        ngModelCtrl.$setViewValue(element.hasClass(buttonsCtrl.activeClass) ? getFalseValue() : getTrueValue());\n                        ngModelCtrl.$render();\n                    });\n                });\n            }\n        };\n    });\n\n    angular.module('mm.foundation.drilldownMenu', []).directive('drilldownMenu', ['$compile', '$timeout', '$window', function ($compile, $timeout, $window) {\n        'ngInject';\n\n        var EVENT_BASE = 'mm.foundation.drilldownMenu';\n\n        return {\n            bindToController: {\n                drilldownMenuApi: '=?'\n            },\n            scope: {},\n            restrict: 'A',\n            controllerAs: 'vm',\n            controller: ['$scope', '$element', function controller($scope, $element) {\n                'ngInject';\n\n                var vm = this;\n\n                vm.maxHeight = -1;\n                vm.maxWidth = -1;\n                vm.childMenus = [];\n                vm.generatedWrapper = null;\n\n                vm.reportChild = reportChild;\n\n                vm.$onInit = $onInit.bind(vm, $scope, $element);\n                vm.$postLink = $postLink;\n                vm.$onDestroy = $onDestroy;\n            }],\n            link: dmLinkFunction\n        };\n\n        /**\n         * Link function for `ul` which heads up the drilldown menu.\n         * We use this to add the wrapper element around the menu\n         *\n         *\n         * @param {Object} $scope           - The scope for this directive\n         * @param {Object} $element         - The element the directive is attached to\n         * @param {any[]} $attrs            - The attributes list for the element\n         * @param {?Object} drilldownMenu   - The drilldownMenu controller\n         */\n        function dmLinkFunction($scope, $element, $attrs, drilldownMenu) {\n            if (!drilldownMenu) {\n                return;\n            }\n\n            /**\n             * Check if our parent is already a wrapper div with the right class\n             */\n            var parent = $element.parent();\n            if (!parent || !parent[0] || parent[0].nodeName !== 'DIV' || !parent.hasClass('is-drilldown')) {\n                /**\n                 * Add a wrapper element to hide the overflowed menu items\n                 */\n                var wrapper = '<div class=\"is-drilldown\"></div>';\n                drilldownMenu.generatedWrapper = angular.element(wrapper);\n                $element.wrap(drilldownMenu.generatedWrapper);\n            }\n\n            /**\n             * Store the root element so we have access to it elsewhere\n             */\n            drilldownMenu.$element = $element;\n        }\n\n        /**\n         * Opens the UL representing the menu.\n         *\n         * @param {Object} ulChild  - The child UL menu to open\n         */\n        function openMenu(ulChild) {\n            ulChild.removeClass('invisible');\n            ulChild.addClass('is-active');\n\n            this.EVENTS._emitEvent(this.EVENTS.open, ulChild);\n        }\n\n        /**\n         * Closes the UL representing the menu.\n         *\n         * @param {Object} ulParent - The UL parent menu to close\n         */\n        function closeMenu(ulParent) {\n            ulParent.addClass('is-closing');\n            ulParent.one('transitionend', function () {\n                ulParent.removeClass('is-active is-closing');\n                ulParent.addClass('invisible');\n            });\n\n            this.EVENTS._emitEvent(this.EVENTS.hide, ulParent);\n        }\n\n        /**\n         * Returns to the top level in the menu.\n         */\n        function doCloseAll(vm) {\n            for (var i = 0; i < vm.childMenus.length; ++i) {\n                var child = vm.childMenus[i];\n                if (child.hasClass('is-active')) {\n                    vm.drilldownMenuApi.hide(child);\n                }\n            }\n        }\n\n        /**\n         * The main controller gets notified of child menus so that it can manage\n         * them appropriately.\n         *\n         * @param {Object} child   - the child element (as an angular.element).\n         */\n        function reportChild(child) {\n            this.childMenus.push(child);\n        }\n\n        /**\n         * Does a resize of the control based on the dimensions of the largest\n         * submenu (or the top level if its the biggest(.\n         *\n         * @param {Object} vm   - the view model for this directive\n         */\n        function doResize(vm) {\n            var parent = vm.$element.parent();\n\n            /**\n             * Reset any hardcoded styles so the children can achieve their natural size\n             */\n            parent.css({\n                'max-width': 'none',\n                'min-height': 'none'\n            });\n            vm.maxHeight = -1;\n            vm.maxWidth = -1;\n\n            /**\n             * Calculate the height of each menu and work out the maxes.\n             */\n            function sizeChild(child) {\n                var rect = child[0].getBoundingClientRect();\n                vm.maxHeight = Math.max(vm.maxHeight, rect.height);\n                vm.maxWidth = Math.max(vm.maxWidth, rect.width);\n            }\n            sizeChild(vm.$element);\n            angular.forEach(vm.childMenus, sizeChild);\n\n            /**\n             * Turn the sizes into css and apply to the wrapper element (so the\n             * largest submenus are fully visible when shown and don't jump around)\n             */\n            var css = {\n                minHeight: vm.maxHeight + 'px',\n                maxWidth: vm.maxWidth + 'px'\n            };\n\n            parent.css(css);\n\n            /**\n             * Emit an event to say we have been resized\n             */\n            vm.drilldownMenuApi.EVENTS._emitEvent(vm.drilldownMenuApi.EVENTS.resize);\n        }\n\n        /**\n         * Called to initialise the directive.\n         * We use this to setup to the API once the binding has been initialised\n         *\n         * @param {Object} $scope   - the current scope\n         * @param {Object} $element - the element\n         */\n        function $onInit($scope, $element) {\n            var vm = this;\n            vm.drilldownMenuApi = {\n                show: openMenu,\n                hide: closeMenu,\n                hideAll: function hideAll() {\n                    return doCloseAll(vm);\n                },\n                resizeMenu: function resizeMenu() {\n                    return doResize(vm, $scope);\n                },\n\n                EVENTS: {\n                    resize: 'resize.' + EVENT_BASE,\n                    open: 'open.' + EVENT_BASE,\n                    hide: 'hide.' + EVENT_BASE,\n\n                    _emitEvent: emitEvent.bind(vm, $scope, $element)\n                }\n            };\n        }\n\n        /**\n         * Called when everything is finished linking.  We use this to calculate the\n         * height of the sub mnenus so that we can size the wrapper div appropriately\n         * so that the largest submenu is visible.\n         */\n        function $postLink() {\n            var vm = this;\n\n            /**\n             * Set the sizes the first time\n             */\n            doResize(vm);\n\n            /**\n             * Handle window resizes and do it whenever the window size changes.\n             */\n            angular.element($window).on('resize', vm.drilldownMenuApi.resizeMenu);\n        }\n\n        /**\n         * Called when we are being destroyed.\n         *  We use this to do cleanup of the various changes we made\n         */\n        function $onDestroy() {\n            var vm = this;\n\n            /**\n             * Remove the resize event handler\n             */\n            angular.element($window).off('resize', vm.drilldownMenuApi.resizeMenu);\n\n            /**\n             * Find out if we need to remove the generated wrapper element\n             */\n            if (vm.generatedWrapper) {\n                delete vm.generatedWrapper;\n            }\n\n            /**\n             * Cleanup the API functions as they hold the controller by context\n             * and stop the controller deleting properly\n             */\n            delete vm.drilldownMenuApi.hideAll;\n            delete vm.drilldownMenuApi.resizeMenu;\n            delete vm.drilldownMenuApi.EVENTS._emitEvent;\n            vm.drilldownMenuApi = {};\n\n            delete vm.$onInit;\n        }\n\n        /**\n         * Wrapper for $emit to simplify including the base element to identify\n         * the source of our emits.\n         *\n         * @param {Object} $scope               - The scope\n         * @param {angular.element} $element    - The element at the top of the menu\n         * @param {string} name                 - The name of the event to emit\n         * @param {...*} args                   - optional list of arguments to pass on\n         */\n        function emitEvent($scope, $element, name) {\n            for (var _len = arguments.length, args = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n                args[_key - 3] = arguments[_key];\n            }\n\n            //\n            // Add our root element as the first extra argument\n            //\n            var newArgs = [$element].concat(args);\n            $scope.$emit.apply($scope, [name].concat(_toConsumableArray(newArgs)));\n        }\n    }]).directive('ul', ['$compile', function ($compile) {\n        'ngInject';\n\n        return {\n            require: '?^^drilldownMenu', // Must be in an ancestor UL, not *this* UL\n            restrict: 'E',\n            link: ulLinkFunction\n        };\n\n        /**\n         * Link function for `ul` which may (or may not) be in a drilldown menu.\n         * We use this to add in the li for moving backwards in the list, and set\n         * the appropriate styles and click handlers.\n         *\n         * NOTE: we require the `drilldownMenu` control to be in an ancestor UL because\n         *       the top level menu doesn't need an automatically added back entry.\n         *\n         * @param {Object} $scope           - The scope for this directive\n         * @param {Object} $element         - The element the directive is attached to\n         * @param {any[]} $attrs            - The attributes list for the element\n         * @param {?Object} drilldownMenu   - The drilldownMenu controller (if any)\n         */\n        function ulLinkFunction($scope, $element, $attrs, drilldownMenu) {\n            if (!drilldownMenu) {\n                return;\n            }\n\n            /**\n             * Check if the dom already contains a \"back\" link with the right class\n             */\n            var elementBack = null;\n            var generatedBack = false;\n            var children = $element.children();\n            for (var i = 0; i < children.length; ++i) {\n                var elementChild = angular.element(children[i]);\n                if (elementChild[0].nodeName === 'LI' && elementChild.hasClass('js-drilldown-back')) {\n                    elementBack = elementChild;\n                }\n            }\n\n            if (!elementBack) {\n                /**\n                 * No existing one, so add in the automatic `back` element\n                 */\n                generatedBack = true;\n                var backButton = '<li class=\"js-drilldown-back\"><a tabindex=\"0\">Back</a></li>';\n                elementBack = angular.element(backButton);\n                $element.prepend(elementBack);\n\n                /**\n                 * Compile the element so that angular knows about it\n                 */\n                $compile(elementBack)($scope);\n            }\n\n            /**\n             * Add the event handler to the `back` element (whether added or existing)\n             */\n            function onClickBack(event) {\n                drilldownMenu.drilldownMenuApi.hide($element);\n                event.stopImmediatePropagation();\n                event.preventDefault();\n            }\n            elementBack.on('click', onClickBack);\n\n            /**\n             * Report this element to the controller for tracking\n             */\n            drilldownMenu.reportChild($element);\n\n            /**\n             * Now set the styles\n             */\n            var elementClasses = 'vertical nested submenu is-drilldown-submenu ' + 'drilldown-submenu-cover-previous invisible';\n            $element.addClass(elementClasses);\n\n            /**\n             * Find the parent LI, and set the event handler to open this level\n             */\n            var parent = $element.parent();\n            parent.addClass('is-drilldown-submenu-parent');\n\n            function onClickOpen(event) {\n                drilldownMenu.drilldownMenuApi.show($element);\n                event.stopImmediatePropagation();\n            }\n            parent.on('click', onClickOpen);\n\n            /**\n             * Handler for $destroy event\n             */\n            $scope.$on('$destroy', function () {\n                /**\n                 * Remove the open event handler from our parent.\n                 */\n                parent.off('click', onClickOpen);\n\n                /**\n                 * Remove the back event handler\n                 */\n                elementBack.off('click', onClickBack);\n\n                /**\n                 * Remove any back element we dynamically added in\n                 */\n                if (generatedBack) {\n                    elementBack.remove();\n                }\n\n                /**\n                 * Remove the classes we added to the element\n                 */\n                $element.removeClass(elementClasses);\n            });\n        }\n    }]);\n\n    angular.module('mm.foundation.dropdownMenu', []).directive('dropdownMenu', ['$compile', function ($compile) {\n        'ngInject';\n\n        return {\n            bindToController: {\n                disableHover: '=',\n                disableClickOpen: '=',\n                closingTime: '=',\n                opensLeft: '='\n            },\n            scope: {},\n            restrict: 'A',\n            controllerAs: 'vm',\n            controller: ['$scope', '$element', function controller($scope, $element) {\n                'ngInject';\n\n                var vm = this;\n            }]\n        };\n    }]).directive('li', ['$timeout', function ($timeout) {\n        'ngInject';\n\n        return {\n            require: '?^^dropdownMenu',\n            restrict: 'E',\n            link: function link($scope, $element, $attrs, dropdownMenu) {\n                if (!dropdownMenu) {\n                    return;\n                }\n\n                var ulChild = null;\n                var children = $element[0].children;\n                var mouseLeaveTimeout;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = angular.element(children[i]);\n                    if (child[0].nodeName === 'UL' && child.hasClass('menu')) {\n                        ulChild = child;\n                    }\n                }\n\n                var topLevel = $element.parent()[0].hasAttribute('dropdown-menu');\n                if (!topLevel) {\n                    $element.addClass('is-submenu-item');\n                }\n\n                if (ulChild) {\n                    ulChild.addClass('is-dropdown-submenu menu submenu vertical');\n                    $element.addClass('is-dropdown-submenu-parent opens-' + (dropdownMenu.opensLeft ? 'left' : 'right'));\n\n                    if (topLevel) {\n                        ulChild.addClass('first-sub');\n                    }\n\n                    if (!dropdownMenu.disableHover) {\n                        $element.on('mouseenter', function () {\n\n                            $timeout.cancel(mouseLeaveTimeout);\n                            $element.parent().children().children().removeClass('js-dropdown-active');\n                            ulChild.addClass('js-dropdown-active');\n                            $element.addClass('is-active');\n                        });\n                    }\n\n                    $element.on('click', function () {\n                        ulChild.addClass('js-dropdown-active');\n                        $element.addClass('is-active');\n                        // $element.attr('data-is-click', 'true');\n                    });\n\n                    $element.on('mouseleave', function () {\n                        mouseLeaveTimeout = $timeout(function () {\n                            ulChild.removeClass('js-dropdown-active');\n                            $element.removeClass('is-active');\n                        }, dropdownMenu.closingTime ? dropdownMenu.closingTime : 500);\n                    });\n                }\n            }\n        };\n    }]);\n    'use strict';\n    function DropdownToggleController($scope, $attrs, mediaQueries, $element, $position, $timeout, $transclude, dropdownPaneOffset) {\n        'ngInject';\n\n        var $ctrl = this;\n        var hoverTimeout = void 0,\n            deRegisterCloseListener = void 0;\n        var $body = angular.element(document.querySelector('body'));\n        $ctrl.css = {};\n\n        $transclude(function (clone, tScope) {\n            var el = angular.element($element[0].querySelector('span:nth-child(1)'));\n            el.append(clone);\n        }, $element.parent(), 'toggle');\n\n        $transclude(function (clone, tScope) {\n            tScope.$close = close;\n            var el = angular.element($element[0].querySelector('div:nth-child(2)'));\n            el.append(clone);\n        }, $element.parent(), 'pane');\n\n        $timeout(function () {\n            positionPane();\n        });\n\n        function close(e) {\n            $ctrl.active = false;\n            $scope.$emit('close.af.dropdownToggle', $element, $scope);\n\n            if ($ctrl.closeOnClick) {\n                $body.off('click', closeOnClick);\n            }\n            deRegisterCloseListener();\n        }\n\n        function open(e) {\n            $ctrl.active = true;\n            $scope.$emit('open.af.dropdownToggle', $element, $scope);\n\n            positionPane(dropdownPaneOffset);\n\n            if ($ctrl.closeOnClick) {\n                $body.on('click', closeOnClick);\n            }\n            deRegisterCloseListener = $scope.$on('doClose.af.dropdownToggle', close);\n        }\n\n        function closeOnClick(e) {\n            var elementContents = Array.prototype.slice.apply($element[0].querySelectorAll('*'));\n\n            if (!elementContents.length) {\n                return;\n            }\n\n            var isOuterElement = elementContents.every(function (node) {\n                return node !== e.target;\n            });\n\n            if (isOuterElement) {\n                close();\n                $scope.$apply();\n            }\n        }\n\n        $ctrl.$onDestroy = function () {\n            if ($ctrl.closeOnClick) {\n                $body.off('click', closeOnClick);\n            }\n        };\n\n        $ctrl.toggle = function () {\n            if ($ctrl.active) {\n                close();\n            } else {\n                open();\n            }\n        };\n\n        $ctrl.mouseover = function () {\n            $timeout.cancel(hoverTimeout);\n            $timeout(function () {\n                $ctrl.active = true;\n            });\n            positionPane(dropdownPaneOffset);\n        };\n\n        $ctrl.mouseleave = function () {\n            $timeout.cancel(hoverTimeout);\n            hoverTimeout = $timeout(function () {\n                $scope.$apply(function () {\n                    $ctrl.active = false;\n                });\n            }, 250);\n        };\n\n        function positionPane(offset_) {\n            var offset = $ctrl.paneOffset || offset_;\n            var dropdownTrigger = angular.element($element[0].querySelector('toggle *:first-child'));\n\n            // let dropdownWidth = dropdown.prop('offsetWidth');\n            var triggerPosition = $position.position(dropdownTrigger);\n\n            $ctrl.css.top = triggerPosition.top + triggerPosition.height + offset + 'px';\n\n            if ($ctrl.paneAlign === 'center') {\n                $ctrl.css.left = triggerPosition.left + triggerPosition.width / 2 + 'px';\n                $ctrl.css.transform = 'translateX(-50%)';\n            } else if ($ctrl.paneAlign === 'right') {\n                $ctrl.css.left = triggerPosition.left + triggerPosition.width + 'px';\n                $ctrl.css.transform = 'translateX(-100%)';\n            } else {\n                $ctrl.css.left = triggerPosition.left + 'px';\n            }\n        }\n    }\n\n    function dropdownToggle($document, $window, $location) {\n        'ngInject';\n\n        return {\n            scope: {},\n            restrict: 'EA',\n            bindToController: {\n                closeOnClick: '=',\n                paneAlign: '@',\n                toggleOnHover: '=',\n                paneOffset: '='\n            },\n            transclude: {\n                'toggle': 'toggle',\n                'pane': 'pane'\n            },\n            templateUrl: 'template/dropdownToggle/dropdownToggle.html',\n            controller: DropdownToggleController,\n            controllerAs: '$ctrl'\n        };\n    }\n\n    /*\n     * dropdownToggle - Provides dropdown menu functionality\n     * @restrict class or attribute\n     * @example:\n    \n       <a dropdown-toggle=\"#dropdown-menu\">My Dropdown Menu</a>\n       <ul id=\"dropdown-menu\" class=\"f-dropdown\">\n         <li ng-repeat=\"choice in dropChoices\">\n           <a ng-href=\"{{choice.href}}\">{{choice.text}}</a>\n         </li>\n       </ul>\n     */\n    angular.module('mm.foundation.dropdownToggle', ['mm.foundation.position', 'mm.foundation.mediaQueries']).directive('dropdownToggle', dropdownToggle).constant('dropdownPaneOffset', 1);\n\n    (function () {\n        angular.module(\"mm.foundation.dropdownToggle\").run([\"$templateCache\", function ($templateCache) {\n            $templateCache.put(\"template/dropdownToggle/dropdownToggle.html\", \"<span\\n    ng-class=\\\"{\\'is-open\\': $ctrl.active}\\\"\\n    ng-click=\\\"$ctrl.toggle()\\\"\\n    ng-mouseover=\\\"$ctrl.toggleOnHover && $ctrl.mouseover()\\\"\\n    ng-mouseleave=\\\"$ctrl.toggleOnHover && $ctrl.mouseleave($event)\\\"></span>\\n<div\\n    ng-style=\\\"$ctrl.css\\\"\\n    ng-class=\\\"{\\'is-open\\': $ctrl.active}\\\"\\n    ng-attr-aria-hidden=\\\"$ctrl.active\\\"\\n    ng-mouseover=\\\"$ctrl.toggleOnHover && $ctrl.mouseover()\\\"\\n    ng-mouseleave=\\\"$ctrl.toggleOnHover && $ctrl.mouseleave($event)\\\"\\n    class=\\\"dropdown-pane{{$ctrl.paneAlign && \\' dropdown-pane-\\' + $ctrl.paneAlign}}\\\"></div>\\n\");\n        }]);\n    })();\n    angular.module('mm.foundation.mediaQueries', []).factory('matchMedia', ['$document', '$window', function ($document, $window) {\n        'ngInject';\n        // MatchMedia for IE <= 9\n\n        return $window.matchMedia || function (doc, undefined) {\n            var bool = void 0;\n            var docElem = doc.documentElement;\n            var refNode = docElem.firstElementChild || docElem.firstChild;\n            // fakeBody required for <FF4 when executed in <head>\n            var fakeBody = doc.createElement('body');\n            var div = doc.createElement('div');\n\n            div.id = 'mq-test-1';\n            div.style.cssText = 'position:absolute;top:-100em';\n            fakeBody.style.background = 'none';\n            fakeBody.appendChild(div);\n\n            return function (q) {\n                div.innerHTML = '&shy;<style media=\"' + q + '\"> #mq-test-1 { width: 42px; }</style>';\n                docElem.insertBefore(fakeBody, refNode);\n                bool = div.offsetWidth === 42;\n                docElem.removeChild(fakeBody);\n                return {\n                    matches: bool,\n                    media: q\n                };\n            };\n        }($document[0]);\n    }]).factory('mediaQueries', ['$document', 'matchMedia', function ($document, matchMedia) {\n        'ngInject';\n\n        // Thank you: https://github.com/sindresorhus/query-string\n\n        function parseStyleToObject(str) {\n            var styleObject = {};\n\n            if (typeof str !== 'string') {\n                return styleObject;\n            }\n\n            str = str.trim().slice(1, -1); // browsers re-quote string style values\n\n            if (!str) {\n                return styleObject;\n            }\n\n            styleObject = str.split('&').reduce(function (ret, param) {\n                var parts = param.replace(/\\+/g, ' ').split('=');\n                var key = parts[0];\n                var val = parts[1];\n                key = decodeURIComponent(key);\n\n                // missing `=` should be `null`:\n                // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n                val = val === undefined ? null : decodeURIComponent(val);\n\n                if (!ret.hasOwnProperty(key)) {\n                    ret[key] = val;\n                } else if (Array.isArray(ret[key])) {\n                    ret[key].push(val);\n                } else {\n                    ret[key] = [ret[key], val];\n                }\n                return ret;\n            }, {});\n\n            return styleObject;\n        }\n\n        var head = angular.element($document[0].querySelector('head'));\n        head.append('<meta class=\"foundation-mq\" />');\n        var extractedStyles = getComputedStyle(head[0].querySelector('meta.foundation-mq')).fontFamily;\n        var namedQueries = parseStyleToObject(extractedStyles);\n        var queries = [];\n\n        for (var key in namedQueries) {\n            queries.push({\n                name: key,\n                value: 'only screen and (min-width: ' + namedQueries[key] + ')'\n            });\n        }\n\n        // Gets the media query of a breakpoint.\n        function get(size) {\n            for (var i in queries) {\n                var query = queries[i];\n                if (size === query.name) return query.value;\n            }\n\n            return null;\n        }\n\n        function atLeast(size) {\n            var query = get(size);\n\n            if (query) {\n                return window.matchMedia(query).matches;\n            }\n            return false;\n        }\n\n        // Gets the current breakpoint name by testing every breakpoint and returning the last one to match (the biggest one).\n        function getCurrentSize() {\n            var matched = void 0;\n\n            for (var i = 0; i < queries.length; i++) {\n                var query = queries[i];\n\n                if (matchMedia(query.value).matches) {\n                    matched = query;\n                }\n            }\n\n            if ((typeof matched === 'undefined' ? 'undefined' : _typeof(matched)) === 'object') {\n                return matched.name;\n            }\n            return matched;\n        }\n\n        var iPhoneSniff = function iPhoneSniff() {\n            return (/iP(ad|hone|od).*OS/.test(window.navigator.userAgent)\n            );\n        };\n        var androidSniff = function androidSniff() {\n            return (/Android/.test(window.navigator.userAgent)\n            );\n        };\n\n        return {\n            getCurrentSize: getCurrentSize,\n            atLeast: atLeast,\n            mobileSniff: function mobileSniff() {\n                return iPhoneSniff() || androidSniff();\n            }\n        };\n    }]);\n\n    var StackedMap = exports.StackedMap = function () {\n        function StackedMap() {\n            _classCallCheck(this, StackedMap);\n\n            this.stack = [];\n        }\n\n        _createClass(StackedMap, [{\n            key: 'add',\n            value: function add(key, value) {\n                this.stack.push({\n                    key: key,\n                    value: value\n                });\n            }\n        }, {\n            key: 'get',\n            value: function get(key) {\n                return this.stack.find(function (s) {\n                    return s.key === key;\n                });\n            }\n        }, {\n            key: 'keys',\n            value: function keys() {\n                return this.stack.map(function (s) {\n                    return s.key;\n                });\n            }\n        }, {\n            key: 'top',\n            value: function top() {\n                return this.stack[this.stack.length - 1];\n            }\n        }, {\n            key: 'remove',\n            value: function remove(key) {\n                this.stack = this.stack.filter(function (s) {\n                    return s.key !== key;\n                });\n            }\n        }, {\n            key: 'removeTop',\n            value: function removeTop() {\n                return this.stack.splice(this.stack.length - 1, 1)[0];\n            }\n        }, {\n            key: 'length',\n            value: function length() {\n                return this.stack.length;\n            }\n        }]);\n\n        return StackedMap;\n    }();\n\n    angular.module('mm.foundation.modal', ['mm.foundation.mediaQueries'])\n\n    /**\n     * A helper directive for the $modal service. It creates a backdrop element.\n     */\n    .directive('modalBackdrop', ['$modalStack', function ($modalStack) {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            replace: true,\n            templateUrl: 'template/modal/backdrop.html',\n            link: function link(scope) {\n                scope.close = function (evt) {\n                    var modal = $modalStack.getTop();\n                    if (modal && modal.value.closeOnClick && modal.value.backdrop && modal.value.backdrop !== 'static' && evt.target === evt.currentTarget) {\n                        evt.preventDefault();\n                        evt.stopPropagation();\n                        $modalStack.dismiss(modal.key, 'backdrop click');\n                    }\n                };\n            }\n        };\n    }]).directive('modalWindow', ['$modalStack', function ($modalStack) {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            scope: {\n                index: '@'\n            },\n            replace: true,\n            transclude: true,\n            templateUrl: 'template/modal/window.html',\n            link: function link(scope, element, attrs) {\n                scope.windowClass = attrs.windowClass || '';\n                scope.isTop = function () {\n                    var top = $modalStack.getTop();\n                    return top ? top.value.modalScope && top.value.modalScope === scope.$parent : true;\n                };\n            }\n        };\n    }]).factory('$modalStack', ['$window', '$timeout', '$document', '$compile', '$rootScope', '$animate', '$q', 'mediaQueries', function ($window, $timeout, $document, $compile, $rootScope, $animate, $q, mediaQueries) {\n        'ngInject';\n\n        var isMobile = mediaQueries.mobileSniff();\n        var OPENED_MODAL_CLASS = 'is-reveal-open';\n        // For modal focus\n        var tabbableSelector = 'a[href], area[href], input:not([disabled]):not([tabindex=\\'-1\\']), ' + 'button:not([disabled]):not([tabindex=\\'-1\\']),select:not([disabled]):not([tabindex=\\'-1\\']), textarea:not([disabled]):not([tabindex=\\'-1\\']), ' + 'iframe, object, embed, *[tabindex]:not([tabindex=\\'-1\\']), *[contenteditable=true]';\n\n        var originalScrollPos = null; // For mobile scroll hack\n        var openedWindows = new StackedMap();\n        var $modalStack = {};\n\n        function backdropIndex() {\n            var topBackdropIndex = -1;\n            var opened = openedWindows.keys();\n            for (var i = 0; i < opened.length; i++) {\n                if (openedWindows.get(opened[i]).value.backdrop) {\n                    topBackdropIndex = i;\n                }\n            }\n            return topBackdropIndex;\n        }\n\n        function resizeHandler() {\n            var opened = openedWindows.keys();\n            var fixedPositiong = opened.length > 0;\n            var body = $document.find('body').eq(0);\n\n            for (var i = 0; i < opened.length; i++) {\n                var modalPos = $modalStack.reposition(opened[i]);\n                if (modalPos && modalPos.position !== 'fixed') {\n                    fixedPositiong = false;\n                }\n            }\n        }\n\n        function removeModalWindow(modalInstance) {\n            var modalWindow = openedWindows.get(modalInstance).value;\n\n            // clean up the stack\n            openedWindows.remove(modalInstance);\n\n            // Remove backdrop\n            if (modalWindow.backdropDomEl) {\n                $animate.leave(modalWindow.backdropDomEl).then(function () {\n                    modalWindow.backdropScope.$destroy();\n                });\n            }\n\n            // Remove modal\n            if (openedWindows.length() === 0) {\n                var body = $document.find('body').eq(0);\n                body.removeClass(OPENED_MODAL_CLASS);\n\n                if (isMobile) {\n                    var html = $document.find('html').eq(0);\n                    html.removeClass(OPENED_MODAL_CLASS);\n                    if (originalScrollPos) {\n                        body[0].scrollTop = originalScrollPos;\n                        originalScrollPos = null;\n                    }\n                }\n                angular.element($window).unbind('resize', resizeHandler);\n            }\n\n            // remove window DOM element\n            $animate.leave(modalWindow.modalDomEl).then(function () {\n                modalWindow.modalScope.$destroy();\n            });\n        }\n\n        function isVisible(element) {\n            return !!(element.offsetWidth || element.offsetHeight || element.getClientRects().length);\n        }\n\n        function getModalCenter(modalInstance) {\n            var options = modalInstance.options;\n\n            if (options.backdrop) {\n                return { left: 0, position: 'relative' };\n            }\n\n            var el = options.modalDomEl;\n            var body = $document.find('body').eq(0);\n\n            var windowWidth = body.clientWidth || $document[0].documentElement.clientWidth;\n            var windowHeight = body.clientHeight || $document[0].documentElement.clientHeight;\n\n            var width = el[0].offsetWidth;\n            var height = el[0].offsetHeight;\n\n            var left = parseInt((windowWidth - width) / 2, 10);\n\n            var top = 0;\n            if (height < windowHeight) {\n                top = parseInt((windowHeight - height) / 4, 10);\n            }\n\n            var modalPos = options.modalPos = options.modalPos || {};\n\n            modalPos.left = left;\n            modalPos.position = 'fixed';\n\n            return modalPos;\n        }\n\n        $document.on('keydown', function (evt) {\n            var modal = openedWindows.top();\n            if (!modal) {\n                return;\n            }\n            if (evt.which === 27) {\n                if (modal.value.keyboard) {\n                    $rootScope.$apply(function () {\n                        $modalStack.dismiss(modal.key);\n                    });\n                }\n            } else if (evt.which === 9) {\n                var list = $modalStack.loadFocusElementList(modal);\n                var focusChanged = false;\n                if (evt.shiftKey) {\n                    if ($modalStack.isFocusInFirstItem(evt, list) || $modalStack.isModalFocused(evt, modal)) {\n                        focusChanged = $modalStack.focusLastFocusableElement(list);\n                    }\n                } else {\n                    if ($modalStack.isFocusInLastItem(evt, list)) {\n                        focusChanged = $modalStack.focusFirstFocusableElement(list);\n                    }\n                }\n\n                if (focusChanged) {\n                    evt.preventDefault();\n                    evt.stopPropagation();\n                }\n            }\n        });\n\n        $modalStack.loadFocusElementList = function (modalWindow) {\n            if (!modalWindow) {\n                return [];\n            }\n            var modalDomE1 = modalWindow.value.modalDomEl;\n            if (modalDomE1 && modalDomE1.length) {\n                var elements = modalDomE1[0].querySelectorAll(tabbableSelector);\n                return [].concat(_toConsumableArray(elements)).filter(function (e) {\n                    return isVisible(e);\n                });\n            }\n            return [];\n        };\n\n        $modalStack.isModalFocused = function (evt, modalWindow) {\n            if (evt && modalWindow) {\n                var modalDomEl = modalWindow.value.modalDomEl;\n                if (modalDomEl && modalDomEl.length) {\n                    return (evt.target || evt.srcElement) === modalDomEl[0];\n                }\n            }\n            return false;\n        };\n\n        $modalStack.isFocusInLastItem = function (evt, list) {\n            if (list.length > 0) {\n                return (evt.target || evt.srcElement) === list[list.length - 1];\n            }\n            return false;\n        };\n\n        $modalStack.focusFirstFocusableElement = function (list) {\n            if (list.length > 0) {\n                list[0].focus();\n                return true;\n            }\n            return false;\n        };\n\n        $modalStack.focusLastFocusableElement = function (list) {\n            if (list.length > 0) {\n                list[list.length - 1].focus();\n                return true;\n            }\n            return false;\n        };\n\n        $modalStack.isFocusInFirstItem = function (evt, list) {\n            if (list.length > 0) {\n                return (evt.target || evt.srcElement) === list[0];\n            }\n            return false;\n        };\n\n        $modalStack.open = function (modalInstance, options) {\n            modalInstance.options = {\n                deferred: options.deferred,\n                modalScope: options.scope,\n                backdrop: options.backdrop,\n                keyboard: options.keyboard,\n                closeOnClick: options.closeOnClick,\n                id: options.id\n            };\n            openedWindows.add(modalInstance, modalInstance.options);\n\n            var currBackdropIndex = backdropIndex();\n\n            var backdropDomEl = void 0;\n\n            if (options.backdrop) {\n                var backdropScope = $rootScope.$new(true);\n                backdropDomEl = $compile('<div modal-backdrop></div>')(backdropScope);\n                openedWindows.top().value.backdropDomEl = backdropDomEl;\n                openedWindows.top().value.backdropScope = backdropScope;\n            }\n\n            if (openedWindows.length() === 1) {\n                angular.element($window).on('resize', resizeHandler);\n            }\n\n            var classes = [];\n            if (options.windowClass) {\n                classes.push(options.windowClass);\n            }\n\n            if (options.size) {\n                classes.push(options.size);\n            }\n\n            if (!options.backdrop) {\n                classes.push('without-overlay');\n            }\n\n            var modalDomEl = angular.element('<div modal-window></div>').attr({\n                'window-class': classes.join(' '),\n                index: openedWindows.length() - 1\n            });\n\n            modalDomEl.html(options.content);\n            $compile(modalDomEl)(options.scope);\n\n            openedWindows.top().value.modalDomEl = modalDomEl;\n\n            return $timeout(function () {\n                // let the directives kick in\n                options.scope.$apply();\n\n                // Attach, measure, remove\n                var body = $document.find('body').eq(0);\n                body.prepend(modalDomEl);\n                var modalPos = getModalCenter(modalInstance, true);\n                modalDomEl.detach();\n\n                //\n                // Apply the style with .css() to conform to content security policy\n                //\n                modalDomEl.css({\n                    visibility: 'visible',\n                    left: '${modalPos.left}px',\n                    display: 'block',\n                    position: '${modalPos.position}',\n                    'z-index': '' // Clear the z-index that was previously set above\n                });\n\n                var promises = [];\n\n                if (backdropDomEl) {\n                    //\n                    // Enusre this is display: block\n                    // NOTE: this must be done AFTER $compile or CSP errors are triggered,\n                    //       and after $timeout or it is just replaced by the template.\n                    //\n                    backdropDomEl.css({\n                        display: 'block'\n                    });\n                    promises.push($animate.enter(backdropDomEl, body, body[0].lastChild));\n                }\n\n                var modalParent = backdropDomEl || body;\n\n                promises.push($animate.enter(modalDomEl, modalParent, modalParent[0].lastChild));\n\n                if (isMobile) {\n                    originalScrollPos = $window.pageYOffset;\n                    var html = $document.find('html').eq(0);\n                    html.addClass(OPENED_MODAL_CLASS);\n                }\n\n                body.addClass(OPENED_MODAL_CLASS);\n\n                // Only for no backdrop modals\n                if (!options.backdrop) {\n                    options.scope.$watch(function () {\n                        return Math.floor(modalDomEl[0].offsetHeight / 10);\n                    }, resizeHandler);\n                }\n\n                return $q.all(promises).then(function () {\n                    var focusedElem = modalDomEl[0].querySelector('[autofocus]') || modalDomEl[0];\n                    var y = modalParent[0].scrollTop;\n                    focusedElem.focus();\n                    modalParent[0].scrollTop = y;\n                });\n            });\n        };\n\n        $modalStack.reposition = function (modalInstance) {\n            var modalWindow = openedWindows.get(modalInstance).value;\n            if (modalWindow) {\n                var modalDomEl = modalWindow.modalDomEl;\n                var modalPos = getModalCenter(modalInstance);\n                modalDomEl.css('left', modalPos.left + 'px');\n                modalDomEl.css('position', modalPos.position);\n                return modalPos;\n            }\n            return {};\n        };\n\n        $modalStack.close = function (modalInstance, result) {\n            var modalWindow = openedWindows.get(modalInstance);\n            if (modalWindow) {\n                modalWindow.value.deferred.resolve(result);\n                return modalInstance.opened.then(function () {\n                    removeModalWindow(modalInstance);\n                });\n            }\n            return $q.resolve();\n        };\n\n        $modalStack.dismiss = function (modalInstance, reason) {\n            var modalWindow = openedWindows.get(modalInstance);\n            if (modalWindow) {\n                modalWindow.value.deferred.reject(reason);\n                return modalInstance.opened.then(function () {\n                    removeModalWindow(modalInstance);\n                });\n            }\n            return $q.resolve();\n        };\n\n        $modalStack.dismissAll = function (reason) {\n            var leaveOpenIds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n            return $q.all(openedWindows.keys().filter(function (key) {\n                return leaveOpenIds.indexOf(openedWindows.get(key).value.id) === -1;\n            }).map(function (key) {\n                return $modalStack.dismiss(key, reason);\n            }));\n        };\n\n        $modalStack.getTop = function () {\n            return openedWindows.top();\n        };\n\n        $modalStack.isOpen = function (id) {\n            return openedWindows.keys().some(function (key) {\n                return skipIds.indexOf(openedWindows.get().value.id) !== -1;\n            });\n        };\n\n        return $modalStack;\n    }]).provider('$modal', function () {\n        'ngInject';\n\n        var _this = this;\n\n        this.options = {\n            backdrop: true, // can be also false or 'static'\n            keyboard: true,\n            closeOnClick: true,\n            id: 0\n        };\n\n        this.$get = ['$injector', '$rootScope', '$q', '$http', '$templateCache', '$controller', '$modalStack', function ($injector, $rootScope, $q, $http, $templateCache, $controller, $modalStack) {\n            'ngInject';\n\n            var $modal = {};\n\n            function getTemplatePromise(options) {\n                if (options.template) {\n                    return $q.resolve(options.template);\n                }\n                return $http.get(options.templateUrl, {\n                    cache: $templateCache\n                }).then(function (result) {\n                    return result.data;\n                });\n            }\n\n            function getResolvePromises(resolves) {\n                var promisesArr = [];\n                angular.forEach(resolves, function (value) {\n                    if (angular.isFunction(value) || angular.isArray(value)) {\n                        promisesArr.push($q.when($injector.invoke(value)));\n                    }\n                });\n                return promisesArr;\n            }\n\n            $modal.open = function (modalOpts) {\n                var modalResultDeferred = $q.defer();\n                var modalOpenedDeferred = $q.defer();\n\n                // prepare an instance of a modal to be injected into controllers and returned to a caller\n                var modalInstance = {\n                    result: modalResultDeferred.promise,\n                    opened: modalOpenedDeferred.promise,\n                    close: function close(result) {\n                        $modalStack.close(modalInstance, result);\n                    },\n                    dismiss: function dismiss(reason) {\n                        $modalStack.dismiss(modalInstance, reason);\n                    },\n                    reposition: function reposition() {\n                        $modalStack.reposition(modalInstance);\n                    }\n                };\n\n                // merge and clean up options\n                var modalOptions = angular.extend({}, _this.options, modalOpts);\n                modalOptions.resolve = modalOptions.resolve || {};\n\n                // verify options\n                if (!modalOptions.template && !modalOptions.templateUrl) {\n                    throw new Error('One of template or templateUrl options is required.');\n                }\n\n                var templateAndResolvePromise = $q.all([getTemplatePromise(modalOptions)].concat(getResolvePromises(modalOptions.resolve)));\n\n                var openedPromise = templateAndResolvePromise.then(function (tplAndVars) {\n                    var modalScope = (modalOptions.scope || $rootScope).$new();\n                    modalScope.$close = modalInstance.close;\n                    modalScope.$dismiss = modalInstance.dismiss;\n\n                    var ctrlInstance = void 0;\n                    var ctrlLocals = {};\n                    var resolveIter = 1;\n\n                    // controllers\n                    if (modalOptions.controller) {\n                        ctrlLocals.$scope = modalScope;\n                        ctrlLocals.$modalInstance = modalInstance;\n                        angular.forEach(modalOptions.resolve, function (value, key) {\n                            ctrlLocals[key] = tplAndVars[resolveIter++];\n                        });\n\n                        ctrlInstance = $controller(modalOptions.controller, ctrlLocals);\n                        if (modalOptions.controllerAs) {\n                            modalScope[modalOptions.controllerAs] = ctrlInstance;\n                        }\n                    }\n\n                    return $modalStack.open(modalInstance, {\n                        scope: modalScope,\n                        deferred: modalResultDeferred,\n                        content: tplAndVars[0],\n                        backdrop: modalOptions.backdrop,\n                        keyboard: modalOptions.keyboard,\n                        windowClass: modalOptions.windowClass,\n                        size: modalOptions.size,\n                        closeOnClick: modalOptions.closeOnClick,\n                        id: modalOptions.id\n                    });\n                }, function (reason) {\n                    modalResultDeferred.reject(reason);\n                    return $q.reject(reason);\n                });\n\n                openedPromise.then(function () {\n                    modalOpenedDeferred.resolve();\n                }, function (reason) {\n                    modalOpenedDeferred.reject(reason);\n                });\n\n                return modalInstance;\n            };\n            return $modal;\n        }];\n    });\n\n    (function () {\n        angular.module(\"mm.foundation.modal\").run([\"$templateCache\", function ($templateCache) {\n            $templateCache.put(\"template/modal/backdrop.html\", \"<div ng-animate-children=\\\"true\\\"\\n    class=\\\"reveal-overlay ng-animate\\\"\\n    ng-click=\\\"close($event)\\\"\\n    ></div>\\n\");\n            $templateCache.put(\"template/modal/window.html\", \"<div tabindex=\\\"-1\\\" class=\\\"reveal {{ windowClass }}\\\">\\n  <div ng-transclude></div>\\n</div>\\n\");\n        }]);\n    })();\n    angular.module('mm.foundation.offcanvas', []).directive('offCanvasWrapper', ['$window', function ($window) {\n        'ngInject';\n\n        return {\n            scope: {},\n            bindToController: { disableAutoClose: '=' },\n            controllerAs: 'vm',\n            restrict: 'C',\n            controller: ['$scope', '$element', function controller($scope, $element) {\n                'ngInject';\n\n                var $ctrl = this;\n\n                var left = angular.element($element[0].querySelector('.position-left'));\n                var right = angular.element($element[0].querySelector('.position-right'));\n                var inner = angular.element($element[0].querySelector('.off-canvas-wrapper-inner'));\n                // var overlay = angular.element(); js-off-canvas-exit\n                var exitOverlay = angular.element('<div class=\"js-off-canvas-exit\"></div>');\n                inner.append(exitOverlay);\n\n                exitOverlay.on('click', function () {\n                    $ctrl.hide();\n                });\n\n                $ctrl.leftToggle = function () {\n                    inner && inner.toggleClass('is-off-canvas-open');\n                    inner && inner.toggleClass('is-open-left');\n                    left && left.toggleClass('is-open');\n                    exitOverlay.addClass('is-visible');\n                    // is-visible\n                };\n\n                $ctrl.rightToggle = function () {\n                    inner && inner.toggleClass('is-off-canvas-open');\n                    inner && inner.toggleClass('is-open-right');\n                    right && right.toggleClass('is-open');\n                    exitOverlay.addClass('is-visible');\n                };\n\n                $ctrl.hide = function () {\n                    inner && inner.removeClass('is-open-left');\n                    inner && inner.removeClass('is-open-right');\n                    left && left.removeClass('is-open');\n                    right && right.removeClass('is-open');\n                    inner && inner.removeClass('is-off-canvas-open');\n                    exitOverlay.removeClass('is-visible');\n                };\n\n                var win = angular.element($window);\n\n                win.bind('resize.body', $ctrl.hide);\n\n                $scope.$on('$destroy', function () {\n                    win.unbind('resize.body', $ctrl.hide);\n                });\n            }]\n        };\n    }]).directive('leftOffCanvasToggle', function () {\n        'ngInject';\n\n        return {\n            require: '^^offCanvasWrapper',\n            restrict: 'C',\n            link: function link($scope, element, attrs, offCanvasWrapper) {\n                element.on('click', function () {\n                    offCanvasWrapper.leftToggle();\n                });\n            }\n        };\n    }).directive('rightOffCanvasToggle', function () {\n        'ngInject';\n\n        return {\n            require: '^^offCanvasWrapper',\n            restrict: 'C',\n            link: function link($scope, element, attrs, offCanvasWrapper) {\n                element.on('click', function () {\n                    offCanvasWrapper.rightToggle();\n                });\n            }\n        };\n    }).directive('offCanvas', function () {\n        'ngInject';\n\n        return {\n            require: { 'offCanvasWrapper': '^^offCanvasWrapper' },\n            restrict: 'C',\n            bindToController: {},\n            scope: {},\n            controllerAs: 'vm',\n            controller: function controller() {}\n        };\n    }).directive('li', function () {\n        'ngInject';\n\n        return {\n            require: '?^^offCanvas',\n            restrict: 'E',\n            link: function link($scope, element, attrs, offCanvas) {\n                if (!offCanvas || offCanvas.offCanvasWrapper.disableAutoClose) {\n                    return;\n                }\n                element.on('click', function () {\n                    offCanvas.offCanvasWrapper.hide();\n                });\n            }\n        };\n    });\n\n    function orbit($element) {\n        'ngInject';\n\n        var _this2 = this;\n\n        this.container = null;\n        this.$element = $element;\n        $element.css({ overflow: 'hidden' });\n        this.setContainer = function (container_) {\n            _this2.container = container_;\n        };\n    }\n\n    function orbitBullets($element) {\n        'ngInject';\n\n        var vm = this;\n    }\n\n    function orbitContainer($element, $interval, $scope, $swipe) {\n        'ngInject';\n\n        var _this3 = this;\n\n        this.slides = [];\n        this.currentIdx = 0;\n        this.skipInterval = true;\n        $element.css({ position: 'relative' });\n        this.addSlide = function (slide) {\n            _this3.slides.push(slide);\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = _this3.slides[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var _slide = _step.value;\n\n                    _slide.element.css({ width: 100 / _this3.slides.length + '%' });\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            $element.css({ width: _this3.slides.length * 100 + '%' });\n        };\n        this.activateState = function (index) {\n            _this3.currentIdx = index;\n            var pct = 100 * _this3.currentIdx / _this3.slides.length;\n            $element.css({ transform: 'translateX(' + -pct + '%)' });\n        };\n        this.prevState = function () {\n            $scope.$apply(function () {\n                if (_this3.currentIdx > 0) {\n                    _this3.activateState((_this3.currentIdx - 1) % _this3.slides.length);\n                } else {\n                    _this3.activateState(_this3.slides.length - 1);\n                }\n            });\n        };\n        this.nextState = function () {\n            $scope.$apply(function () {\n                _this3.activateState((_this3.currentIdx + 1) % _this3.slides.length);\n            });\n        };\n        this.stopAutoPlay = function () {\n            $interval.cancel(_this3.autoSlider);\n            _this3.autoSlider = null;\n        };\n        this.restartTimer = function () {\n            _this3.stopAutoPlay();\n            _this3.autoSlider = $interval(function () {\n                _this3.activateState(++_this3.currentIdx % _this3.slides.length);\n            }, 5000);\n        };\n        $element.on('mouseenter', this.stopAutoPlay);\n        $element.on('mouseleave', this.restartTimer);\n        this.$onDestroy = function () {\n            _this3.stopAutoPlay();\n            $element.off('mouseenter', _this3.stopAutoPlay);\n            $element.off('mouseleave', _this3.restartTimer);\n        };\n\n        var startPos = null;\n        var nextIdx = this.currentIdx;\n        var vm = this;\n\n        $swipe.bind($element, {\n            start: function start(pos) {\n                $element.addClass('touching');\n                _this3.stopAutoPlay();\n                startPos = pos;\n            },\n            move: function move(pos) {\n                var dist = startPos.x - pos.x;\n                var width = _this3.orbit.$element[0].offsetWidth;\n                var pctDist = 100 * dist / width;\n                var lastPct = 100 * _this3.currentIdx / _this3.slides.length;\n                var pct = lastPct + pctDist / _this3.slides.length;\n                var roundFn = pos.x > startPos.x ? Math.floor : Math.ceil;\n\n                nextIdx = roundFn(pct / (100 / _this3.slides.length));\n\n                $element.css({ transform: 'translateX(' + -pct + '%)' });\n            },\n            end: function end(pos) {\n                $element.removeClass('touching');\n\n                if (nextIdx >= _this3.slides.length) {\n                    nextIdx = _this3.slides.length - 1;\n                } else if (nextIdx < 0) {\n                    nextIdx = 0;\n                }\n\n                _this3.activateState(nextIdx);\n                _this3.restartTimer();\n                $scope.$apply();\n            },\n            cancel: function cancel() {\n                _this3.restartTimer();\n                $element.removeClass('touching');\n            }\n        });\n        this.$onInit = function () {\n            _this3.orbit.setContainer(_this3);\n            // this.restartTimer();\n            $scope.$watch(function () {\n                return _this3.currentIdx;\n            }, _this3.restartTimer);\n        };\n    }\n    function orbitSlide($element) {\n        'ngInject';\n\n        var vm = this;\n        // transform: translateX(-50%);\n        $element.css({ overflow: 'hidden', float: 'left', position: 'relative' });\n        this.$onInit = function () {\n            vm.orbitContainer.addSlide({ element: $element });\n        };\n    }\n\n    function orbitPrevious($element) {\n        'ngInject';\n\n        var vm = this;\n        $element.css({ cursor: 'pointer' });\n        this.$onInit = function () {\n            $element.on('click', function () {\n                vm.orbit.container.prevState();\n            });\n        };\n    }\n\n    function orbitNext($element) {\n        'ngInject';\n\n        var vm = this;\n        $element.css({ cursor: 'pointer' });\n        this.$onInit = function () {\n            $element.on('click', function () {\n                vm.orbit.container.nextState();\n            });\n        };\n    }\n\n    angular.module('mm.foundation.orbit', ['ngTouch']).directive('orbit', function () {\n        return {\n            scope: {},\n            restrict: 'C',\n            controller: orbit\n        };\n    }).directive('orbitContainer', function () {\n        return {\n            scope: {},\n            restrict: 'C',\n            require: { orbit: '^^orbit' },\n            controller: orbitContainer,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n    }).directive('orbitSlide', function () {\n        return {\n            scope: {},\n            restrict: 'C',\n            require: { orbitContainer: '^^orbitContainer' },\n            controller: orbitSlide,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n    }).directive('orbitPrevious', function () {\n        return {\n            scope: {},\n            restrict: 'C',\n            require: { orbit: '^^orbit' },\n            controller: orbitPrevious,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n    }).directive('orbitNext', function () {\n        return {\n            scope: {},\n            restrict: 'C',\n            require: { orbit: '^^orbit' },\n            controller: orbitNext,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n    }).directive('orbitBullets', function () {\n        return {\n            scope: {},\n            restrict: 'EC',\n            require: { orbit: '^^orbit' },\n            controller: orbitBullets,\n            controllerAs: 'vm',\n            bindToController: true,\n            template: '\\n        <button\\n            ng-click=\"vm.orbit.container.activateState($index)\"\\n            ng-repeat=\"slide in vm.orbit.container.slides\"\\n            ng-class=\"{\\'is-active\\': $index === vm.orbit.container.currentIdx}\">\\n            </button>\\n    '\n        };\n    });\n\n    angular.module('mm.foundation.pagination', []).controller('PaginationController', ['$scope', '$attrs', '$parse', '$interpolate', function ($scope, $attrs, $parse, $interpolate) {\n        var self = this,\n            setNumPages = $attrs.numPages ? $parse($attrs.numPages).assign : angular.noop;\n\n        this.init = function (defaultItemsPerPage) {\n            if ($attrs.itemsPerPage) {\n                $scope.$parent.$watch($parse($attrs.itemsPerPage), function (value) {\n                    self.itemsPerPage = parseInt(value, 10);\n                    $scope.totalPages = self.calculateTotalPages();\n                });\n            } else {\n                this.itemsPerPage = defaultItemsPerPage;\n            }\n        };\n\n        this.noPrevious = function () {\n            return this.page === 1;\n        };\n        this.noNext = function () {\n            return this.page === $scope.totalPages;\n        };\n\n        this.isActive = function (page) {\n            return this.page === page;\n        };\n\n        this.calculateTotalPages = function () {\n            var totalPages = this.itemsPerPage < 1 ? 1 : Math.ceil($scope.totalItems / this.itemsPerPage);\n            return Math.max(totalPages || 0, 1);\n        };\n\n        this.getAttributeValue = function (attribute, defaultValue, interpolate) {\n            return angular.isDefined(attribute) ? interpolate ? $interpolate(attribute)($scope.$parent) : $scope.$parent.$eval(attribute) : defaultValue;\n        };\n\n        this.render = function () {\n            this.page = parseInt($scope.page, 10) || 1;\n            if (this.page > 0 && this.page <= $scope.totalPages) {\n                $scope.pages = this.getPages(this.page, $scope.totalPages);\n            }\n        };\n\n        $scope.selectPage = function (page) {\n            if (!self.isActive(page) && page > 0 && page <= $scope.totalPages) {\n                $scope.page = page;\n                $scope.onSelectPage({\n                    page: page\n                });\n            }\n        };\n\n        $scope.$watch('page', function () {\n            self.render();\n        });\n\n        $scope.$watch('totalItems', function () {\n            $scope.totalPages = self.calculateTotalPages();\n        });\n\n        $scope.$watch('totalPages', function (value) {\n            setNumPages($scope.$parent, value); // Readonly variable\n\n            if (self.page > value) {\n                $scope.selectPage(value);\n            } else {\n                self.render();\n            }\n        });\n    }]).constant('paginationConfig', {\n        itemsPerPage: 10,\n        boundaryLinks: false,\n        directionLinks: true,\n        firstText: 'First',\n        previousText: 'Previous',\n        nextText: 'Next',\n        lastText: 'Last',\n        rotate: true\n    }).directive('pagination', ['$parse', 'paginationConfig', function ($parse, paginationConfig) {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            scope: {\n                page: '=',\n                totalItems: '=',\n                onSelectPage: ' &'\n            },\n            controller: 'PaginationController',\n            templateUrl: 'template/pagination/pagination.html',\n            replace: true,\n            link: function link(scope, element, attrs, paginationCtrl) {\n\n                // Setup configuration parameters\n                var maxSize,\n                    boundaryLinks = paginationCtrl.getAttributeValue(attrs.boundaryLinks, paginationConfig.boundaryLinks),\n                    directionLinks = paginationCtrl.getAttributeValue(attrs.directionLinks, paginationConfig.directionLinks),\n                    firstText = paginationCtrl.getAttributeValue(attrs.firstText, paginationConfig.firstText, true),\n                    previousText = paginationCtrl.getAttributeValue(attrs.previousText, paginationConfig.previousText, true),\n                    nextText = paginationCtrl.getAttributeValue(attrs.nextText, paginationConfig.nextText, true),\n                    lastText = paginationCtrl.getAttributeValue(attrs.lastText, paginationConfig.lastText, true),\n                    rotate = paginationCtrl.getAttributeValue(attrs.rotate, paginationConfig.rotate);\n\n                paginationCtrl.init(paginationConfig.itemsPerPage);\n\n                if (attrs.maxSize) {\n                    scope.$parent.$watch($parse(attrs.maxSize), function (value) {\n                        maxSize = parseInt(value, 10);\n                        paginationCtrl.render();\n                    });\n                }\n\n                // Create page object used in template\n                function makePage(number, text, isActive, isDisabled) {\n                    return {\n                        number: number,\n                        text: text,\n                        active: isActive,\n                        disabled: isDisabled\n                    };\n                }\n\n                paginationCtrl.getPages = function (currentPage, totalPages) {\n                    var pages = [];\n\n                    // Default page limits\n                    var startPage = 1,\n                        endPage = totalPages;\n                    var isMaxSized = angular.isDefined(maxSize) && maxSize < totalPages;\n\n                    // recompute if maxSize\n                    if (isMaxSized) {\n                        if (rotate) {\n                            // Current page is displayed in the middle of the visible ones\n                            startPage = Math.max(currentPage - Math.floor(maxSize / 2), 1);\n                            endPage = startPage + maxSize - 1;\n\n                            // Adjust if limit is exceeded\n                            if (endPage > totalPages) {\n                                endPage = totalPages;\n                                startPage = endPage - maxSize + 1;\n                            }\n                        } else {\n                            // Visible pages are paginated with maxSize\n                            startPage = (Math.ceil(currentPage / maxSize) - 1) * maxSize + 1;\n\n                            // Adjust last page if limit is exceeded\n                            endPage = Math.min(startPage + maxSize - 1, totalPages);\n                        }\n                    }\n\n                    // Add page number links\n                    for (var number = startPage; number <= endPage; number++) {\n                        var page = makePage(number, number, paginationCtrl.isActive(number), false);\n                        pages.push(page);\n                    }\n\n                    // Add links to move between page sets\n                    if (isMaxSized && !rotate) {\n                        if (startPage > 1) {\n                            var previousPageSet = makePage(startPage - 1, '...', false, false);\n                            pages.unshift(previousPageSet);\n                        }\n\n                        if (endPage < totalPages) {\n                            var nextPageSet = makePage(endPage + 1, '...', false, false);\n                            pages.push(nextPageSet);\n                        }\n                    }\n\n                    // Add previous & next links\n                    if (directionLinks) {\n                        var previousPage = makePage(currentPage - 1, previousText, false, paginationCtrl.noPrevious());\n                        pages.unshift(previousPage);\n\n                        var nextPage = makePage(currentPage + 1, nextText, false, paginationCtrl.noNext());\n                        pages.push(nextPage);\n                    }\n\n                    // Add first & last links\n                    if (boundaryLinks) {\n                        var firstPage = makePage(1, firstText, false, paginationCtrl.noPrevious());\n                        pages.unshift(firstPage);\n\n                        var lastPage = makePage(totalPages, lastText, false, paginationCtrl.noNext());\n                        pages.push(lastPage);\n                    }\n\n                    return pages;\n                };\n            }\n        };\n    }]).constant('pagerConfig', {\n        itemsPerPage: 10,\n        previousText: '« Previous',\n        nextText: 'Next »',\n        align: true\n    }).directive('pager', ['pagerConfig', function (pagerConfig) {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            scope: {\n                page: '=',\n                totalItems: '=',\n                onSelectPage: ' &'\n            },\n            controller: 'PaginationController',\n            templateUrl: 'template/pagination/pager.html',\n            replace: true,\n            link: function link(scope, element, attrs, paginationCtrl) {\n\n                // Setup configuration parameters\n                var previousText = paginationCtrl.getAttributeValue(attrs.previousText, pagerConfig.previousText, true),\n                    nextText = paginationCtrl.getAttributeValue(attrs.nextText, pagerConfig.nextText, true),\n                    align = paginationCtrl.getAttributeValue(attrs.align, pagerConfig.align);\n\n                paginationCtrl.init(pagerConfig.itemsPerPage);\n\n                // Create page object used in template\n                function makePage(number, text, isDisabled, isPrevious, isNext) {\n                    return {\n                        number: number,\n                        text: text,\n                        disabled: isDisabled,\n                        previous: align && isPrevious,\n                        next: align && isNext\n                    };\n                }\n\n                paginationCtrl.getPages = function (currentPage) {\n                    return [makePage(currentPage - 1, previousText, paginationCtrl.noPrevious(), true, false), makePage(currentPage + 1, nextText, paginationCtrl.noNext(), false, true)];\n                };\n            }\n        };\n    }]);\n\n    (function () {\n        angular.module(\"mm.foundation.pagination\").run([\"$templateCache\", function ($templateCache) {\n            $templateCache.put(\"template/pagination/pager.html\", \"<ul class=\\\"pagination\\\">\\n  <li ng-repeat=\\\"page in pages\\\" class=\\\"arrow\\\" ng-class=\\\"{unavailable: page.disabled, left: page.previous, right: page.next}\\\"><a ng-click=\\\"selectPage(page.number)\\\">{{page.text}}</a></li>\\n</ul>\\n\");\n            $templateCache.put(\"template/pagination/pagination.html\", \"<ul class=\\\"pagination\\\" role=\\\"navigation\\\" aria-label=\\\"Pagination\\\">\\n  <li ng-repeat=\\\"page in pages\\\"\\n    ng-class=\\\"{\\n        \\'pagination-previous\\': $first,\\n        \\'pagination-next\\': $last,\\n        current: page.active,\\n        unavailable: page.disabled\\n        }\\\">\\n    <a ng-if=\\\"!page.active\\\" ng-click=\\\"selectPage(page.number)\\\">{{page.text}}</a>\\n    <span ng-if=\\\"page.active\\\">{{page.text}}</span>\\n  </li>\\n</ul>\\n\");\n        }]);\n    })();\n    angular.module('mm.foundation.position', [])\n\n    /**\n     * A set of utility methods that can be use to retrieve position of DOM elements.\n     * It is meant to be used where we need to absolute-position DOM elements in\n     * relation to other, existing elements (this is the case for tooltips, popovers,\n     * typeahead suggestions etc.).\n     */\n    .factory('$position', ['$document', '$window', function ($document, $window) {\n        'ngInject';\n\n        function getStyle(el, cssprop) {\n            if (el.currentStyle) {\n                //IE\n                return el.currentStyle[cssprop];\n            } else if ($window.getComputedStyle) {\n                return $window.getComputedStyle(el)[cssprop];\n            }\n            // finally try and get inline style\n            return el.style[cssprop];\n        }\n\n        /**\n         * Checks if a given element is statically positioned\n         * @param element - raw DOM element\n         */\n        function isStaticPositioned(element) {\n            return (getStyle(element, \"position\") || 'static') === 'static';\n        }\n\n        /**\n         * returns the closest, non-statically positioned parentOffset of a given element\n         * @param element\n         */\n        var parentOffsetEl = function parentOffsetEl(element) {\n            var docDomEl = $document[0];\n            var offsetParent = element.offsetParent || docDomEl;\n            while (offsetParent && offsetParent !== docDomEl && isStaticPositioned(offsetParent)) {\n                offsetParent = offsetParent.offsetParent;\n            }\n            return offsetParent || docDomEl;\n        };\n\n        return {\n            /**\n             * Provides read-only equivalent of jQuery's position function:\n             * http://api.jquery.com/position/\n             */\n            position: function position(element) {\n                var elBCR = this.offset(element);\n                var offsetParentBCR = {\n                    top: 0,\n                    left: 0\n                };\n                var offsetParentEl = parentOffsetEl(element[0]);\n                if (offsetParentEl != $document[0]) {\n                    offsetParentBCR = this.offset(angular.element(offsetParentEl));\n                    offsetParentBCR.top += offsetParentEl.clientTop - offsetParentEl.scrollTop;\n                    offsetParentBCR.left += offsetParentEl.clientLeft - offsetParentEl.scrollLeft;\n                }\n\n                var boundingClientRect = element[0].getBoundingClientRect();\n                return {\n                    width: boundingClientRect.width || element.prop('offsetWidth'),\n                    height: boundingClientRect.height || element.prop('offsetHeight'),\n                    top: elBCR.top - offsetParentBCR.top,\n                    left: elBCR.left - offsetParentBCR.left\n                };\n            },\n\n            /**\n             * Provides read-only equivalent of jQuery's offset function:\n             * http://api.jquery.com/offset/\n             */\n            offset: function offset(element) {\n                var boundingClientRect = element[0].getBoundingClientRect();\n                return {\n                    width: boundingClientRect.width || element.prop('offsetWidth'),\n                    height: boundingClientRect.height || element.prop('offsetHeight'),\n                    top: boundingClientRect.top + ($window.pageYOffset || $document[0].body.scrollTop || $document[0].documentElement.scrollTop),\n                    left: boundingClientRect.left + ($window.pageXOffset || $document[0].body.scrollLeft || $document[0].documentElement.scrollLeft)\n                };\n            }\n        };\n    }]);\n\n    angular.module('mm.foundation.progressbar', []).constant('progressConfig', {\n        animate: true,\n        max: 100\n    }).controller('ProgressController', ['$scope', '$attrs', 'progressConfig', '$animate', function ($scope, $attrs, progressConfig, $animate) {\n        'ngInject';\n\n        var self = this,\n            bars = [],\n            max = angular.isDefined($attrs.max) ? $scope.$parent.$eval($attrs.max) : progressConfig.max,\n            animate = angular.isDefined($attrs.animate) ? $scope.$parent.$eval($attrs.animate) : progressConfig.animate;\n\n        this.addBar = function (bar, element) {\n            var oldValue = 0,\n                index = bar.$parent.$index;\n            if (angular.isDefined(index) && bars[index]) {\n                oldValue = bars[index].value;\n            }\n            bars.push(bar);\n\n            this.update(element, bar.value, oldValue);\n\n            bar.$watch('value', function (value, oldValue) {\n                if (value !== oldValue) {\n                    self.update(element, value, oldValue);\n                }\n            });\n\n            bar.$on('$destroy', function () {\n                self.removeBar(bar);\n            });\n        };\n\n        // Update bar element width\n        this.update = function (element, newValue, oldValue) {\n            var percent = this.getPercentage(newValue);\n\n            if (animate) {\n                element.css('width', this.getPercentage(oldValue) + '%');\n                $animate.animate(element, {\n                    'width': this.getPercentage(oldValue) + '%'\n                }, {\n                    width: percent + '%'\n                });\n                // $transition(element, {\n                //     width: percent + '%'\n                // });\n            } else {\n                element.css({\n                    'transition': 'none',\n                    'width': percent + '%'\n                });\n            }\n        };\n\n        this.removeBar = function (bar) {\n            bars.splice(bars.indexOf(bar), 1);\n        };\n\n        this.getPercentage = function (value) {\n            return Math.round(100 * value / max);\n        };\n    }]).directive('progress', function () {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            replace: true,\n            transclude: true,\n            controller: 'ProgressController',\n            require: 'progress',\n            scope: {},\n            template: '<div class=\"progress\" ng-transclude></div>'\n            //templateUrl: 'template/progressbar/progress.html' // Works in AngularJS 1.2\n        };\n    }).directive('bar', function () {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            replace: true,\n            transclude: true,\n            require: '^progress',\n            scope: {\n                value: '=',\n                type: '@'\n            },\n            templateUrl: 'template/progressbar/bar.html',\n            link: function link(scope, element, attrs, progressCtrl) {\n                progressCtrl.addBar(scope, element);\n            }\n        };\n    }).directive('progressbar', function () {\n        return {\n            restrict: 'EA',\n            replace: true,\n            transclude: true,\n            controller: 'ProgressController',\n            scope: {\n                value: '=',\n                type: '@'\n            },\n            templateUrl: 'template/progressbar/progressbar.html',\n            link: function link(scope, element, attrs, progressCtrl) {\n                progressCtrl.addBar(scope, angular.element(element.children()[0]));\n            }\n        };\n    });\n\n    (function () {\n        angular.module(\"mm.foundation.progressbar\").run([\"$templateCache\", function ($templateCache) {\n            $templateCache.put(\"template/progressbar/bar.html\", \"<span class=\\\"meter\\\" ng-transclude></span>\\n\");\n            $templateCache.put(\"template/progressbar/progress.html\", \"<div class=\\\"progress\\\" ng-class=\\\"type\\\" ng-transclude></div>\\n\");\n            $templateCache.put(\"template/progressbar/progressbar.html\", \"<div class=\\\"progress\\\" role=\\\"progressbar\\\" ng-class=\\\"type\\\">\\n  <span class=\\\"progress-meter\\\"><p class=\\\"progress-meter-text\\\" ng-transclude></p></span>\\n</div>\\n\");\n        }]);\n    })();\n    angular.module('mm.foundation.rating', []).constant('ratingConfig', {\n        max: 5,\n        stateOn: null,\n        stateOff: null\n    }).controller('RatingController', ['$scope', '$attrs', '$parse', 'ratingConfig', function ($scope, $attrs, $parse, ratingConfig) {\n\n        this.maxRange = angular.isDefined($attrs.max) ? $scope.$parent.$eval($attrs.max) : ratingConfig.max;\n        this.stateOn = angular.isDefined($attrs.stateOn) ? $scope.$parent.$eval($attrs.stateOn) : ratingConfig.stateOn;\n        this.stateOff = angular.isDefined($attrs.stateOff) ? $scope.$parent.$eval($attrs.stateOff) : ratingConfig.stateOff;\n\n        this.createRateObjects = function (states) {\n            var defaultOptions = {\n                stateOn: this.stateOn,\n                stateOff: this.stateOff\n            };\n\n            for (var i = 0, n = states.length; i < n; i++) {\n                states[i] = angular.extend({ index: i }, defaultOptions, states[i]);\n            }\n            return states;\n        };\n\n        // Get objects used in template\n        $scope.range = angular.isDefined($attrs.ratingStates) ? this.createRateObjects(angular.copy($scope.$parent.$eval($attrs.ratingStates))) : this.createRateObjects(new Array(this.maxRange));\n\n        $scope.rate = function (value) {\n            if ($scope.value !== value && !$scope.readonly) {\n                $scope.value = value;\n            }\n        };\n\n        $scope.enter = function (value) {\n            if (!$scope.readonly) {\n                $scope.val = value;\n            }\n            $scope.onHover({ value: value });\n        };\n\n        $scope.reset = function () {\n            $scope.val = angular.copy($scope.value);\n            $scope.onLeave();\n        };\n\n        $scope.$watch('value', function (value) {\n            $scope.val = value;\n        });\n\n        $scope.readonly = false;\n        if ($attrs.readonly) {\n            $scope.$parent.$watch($parse($attrs.readonly), function (value) {\n                $scope.readonly = !!value;\n            });\n        }\n    }]).directive('rating', function () {\n        return {\n            restrict: 'EA',\n            scope: {\n                value: '=',\n                onHover: '&',\n                onLeave: '&'\n            },\n            controller: 'RatingController',\n            templateUrl: 'template/rating/rating.html',\n            replace: true\n        };\n    });\n\n    (function () {\n        angular.module(\"mm.foundation.rating\").run([\"$templateCache\", function ($templateCache) {\n            $templateCache.put(\"template/rating/rating.html\", \"<span ng-mouseleave=\\\"reset()\\\">\\n  <i ng-repeat=\\\"r in range\\\" ng-mouseenter=\\\"enter($index + 1)\\\" ng-click=\\\"rate($index + 1)\\\" class=\\\"fa\\\"\\n    ng-class=\\\"$index < val && (r.stateOn || \\'fa-star\\') || (r.stateOff || \\'fa-star-o\\')\\\"></i>\\n</span>\\n\");\n        }]);\n    })();\n    /**\n     * @ngdoc overview\n     * @name mm.foundation.tabs\n     *\n     * @description\n     * AngularJS version of the tabs directive.\n     */\n\n    angular.module('mm.foundation.tabs', []).controller('TabsetController', ['$scope', function TabsetCtrl($scope) {\n        'ngInject';\n\n        var ctrl = this;\n        var tabs = ctrl.tabs = $scope.tabs = [];\n\n        if (angular.isUndefined($scope.openOnLoad)) {\n            $scope.openOnLoad = true;\n        }\n\n        ctrl.select = function (tab) {\n            angular.forEach(tabs, function (tab) {\n                tab.active = false;\n            });\n            tab.active = true;\n        };\n\n        ctrl.addTab = function addTab(tab) {\n            tabs.push(tab);\n            if ($scope.openOnLoad && (tabs.length === 1 || tab.active)) {\n                ctrl.select(tab);\n            }\n        };\n\n        ctrl.removeTab = function removeTab(tab) {\n            var index = tabs.indexOf(tab);\n            //Select a new tab if the tab to be removed is selected\n            if (tab.active && tabs.length > 1) {\n                //If this is the last tab, select the previous tab. else, the next tab.\n                var newActiveIndex = index == tabs.length - 1 ? index - 1 : index + 1;\n                ctrl.select(tabs[newActiveIndex]);\n            }\n            tabs.splice(index, 1);\n        };\n    }])\n\n    /**\n     * @ngdoc directive\n     * @name mm.foundation.tabs.directive:tabset\n     * @restrict EA\n     *\n     * @description\n     * Tabset is the outer container for the tabs directive\n     *\n     * @param {boolean=} vertical Whether or not to use vertical styling for the tabs.\n     * @param {boolean=} justified Whether or not to use justified styling for the tabs.\n     *\n     * @example\n    <example module=\"mm.foundation\">\n      <file name=\"index.html\">\n        <tabset>\n          <tab heading=\"Tab 1\"><b>First</b> Content!</tab>\n          <tab heading=\"Tab 2\"><i>Second</i> Content!</tab>\n        </tabset>\n        <hr />\n        <tabset vertical=\"true\">\n          <tab heading=\"Vertical Tab 1\"><b>First</b> Vertical Content!</tab>\n          <tab heading=\"Vertical Tab 2\"><i>Second</i> Vertical Content!</tab>\n        </tabset>\n        <tabset justified=\"true\">\n          <tab heading=\"Justified Tab 1\"><b>First</b> Justified Content!</tab>\n          <tab heading=\"Justified Tab 2\"><i>Second</i> Justified Content!</tab>\n        </tabset>\n      </file>\n    </example>\n     */\n    .directive('tabset', function () {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            transclude: true,\n            replace: true,\n            scope: {\n                openOnLoad: '=?'\n            },\n            controller: 'TabsetController',\n            templateUrl: function templateUrl(elem, attr) {\n                var type = attr.vertical == 'true' ? 'vertical' : 'horizontal';\n                return 'template/tabs/tabset-' + type + '.html';\n            },\n            link: function link(scope, element, attrs) {\n                scope.vertical = angular.isDefined(attrs.vertical) ? scope.$parent.$eval(attrs.vertical) : false;\n                scope.justified = angular.isDefined(attrs.justified) ? scope.$parent.$eval(attrs.justified) : false;\n                scope.type = angular.isDefined(attrs.type) ? scope.$parent.$eval(attrs.type) : 'tabs';\n            }\n        };\n    })\n\n    /**\n     * @ngdoc directive\n     * @name mm.foundation.tabs.directive:tab\n     * @restrict EA\n     *\n     * @param {string=} heading The visible heading, or title, of the tab. Set HTML headings with {@link mm.foundation.tabs.directive:tabHeading tabHeading}.\n     * @param {string=} select An expression to evaluate when the tab is selected.\n     * @param {boolean=} active A binding, telling whether or not this tab is selected.\n     * @param {boolean=} disabled A binding, telling whether or not this tab is disabled.\n     *\n     * @description\n     * Creates a tab with a heading and content. Must be placed within a {@link mm.foundation.tabs.directive:tabset tabset}.\n     *\n     * @example\n    <example module=\"mm.foundation\">\n      <file name=\"index.html\">\n        <div ng-controller=\"TabsDemoCtrl\">\n          <button class=\"button small\" ng-click=\"items[0].active = true\">\n            Select item 1, using active binding\n          </button>\n          <button class=\"button small\" ng-click=\"items[1].disabled = !items[1].disabled\">\n            Enable/disable item 2, using disabled binding\n          </button>\n          <br />\n          <tabset>\n            <tab heading=\"Tab 1\">First Tab</tab>\n            <tab select=\"alertMe()\">\n              <tab-heading><i class=\"fa fa-bell\"></i> Alert me!</tab-heading>\n              Second Tab, with alert callback and html heading!\n            </tab>\n            <tab ng-repeat=\"item in items\"\n              heading=\"{{item.title}}\"\n              disabled=\"item.disabled\"\n              active=\"item.active\">\n              {{item.content}}\n            </tab>\n          </tabset>\n        </div>\n      </file>\n      <file name=\"script.js\">\n        function TabsDemoCtrl($scope) {\n          $scope.items = [\n            { title:\"Dynamic Title 1\", content:\"Dynamic Item 0\" },\n            { title:\"Dynamic Title 2\", content:\"Dynamic Item 1\", disabled: true }\n          ];\n    \n          $scope.alertMe = function() {\n            setTimeout(function() {\n              alert(\"You've selected the alert tab!\");\n            });\n          };\n        };\n      </file>\n    </example>\n     */\n\n    /**\n     * @ngdoc directive\n     * @name mm.foundation.tabs.directive:tabHeading\n     * @restrict EA\n     *\n     * @description\n     * Creates an HTML heading for a {@link mm.foundation.tabs.directive:tab tab}. Must be placed as a child of a tab element.\n     *\n     * @example\n    <example module=\"mm.foundation\">\n      <file name=\"index.html\">\n        <tabset>\n          <tab>\n            <tab-heading><b>HTML</b> in my titles?!</tab-heading>\n            And some content, too!\n          </tab>\n          <tab>\n            <tab-heading><i class=\"fa fa-heart\"></i> Icon heading?!?</tab-heading>\n            That's right.\n          </tab>\n        </tabset>\n      </file>\n    </example>\n     */\n    .directive('tab', ['$parse', function ($parse) {\n        'ngInject';\n\n        return {\n            require: '^tabset',\n            restrict: 'EA',\n            replace: true,\n            templateUrl: 'template/tabs/tab.html',\n            transclude: true,\n            scope: {\n                heading: '@',\n                onSelect: '&select', //This callback is called in contentHeadingTransclude\n                //once it inserts the tab's content into the dom\n                onDeselect: '&deselect'\n            },\n            controller: function controller() {\n                //Empty controller so other directives can require being 'under' a tab\n            },\n            compile: function compile(elm, attrs, transclude) {\n                return function postLink(scope, elm, attrs, tabsetCtrl) {\n                    var getActive, setActive;\n                    if (attrs.active) {\n                        getActive = $parse(attrs.active);\n                        setActive = getActive.assign;\n                        scope.$parent.$watch(getActive, function updateActive(value, oldVal) {\n                            // Avoid re-initializing scope.active as it is already initialized\n                            // below. (watcher is called async during init with value ===\n                            // oldVal)\n                            if (value !== oldVal) {\n                                scope.active = !!value;\n                            }\n                        });\n                        scope.active = getActive(scope.$parent);\n                    } else {\n                        setActive = getActive = angular.noop;\n                    }\n\n                    scope.$watch('active', function (active) {\n                        if (!angular.isFunction(setActive)) {\n                            return;\n                        }\n                        // Note this watcher also initializes and assigns scope.active to the\n                        // attrs.active expression.\n                        setActive(scope.$parent, active);\n                        if (active) {\n                            tabsetCtrl.select(scope);\n                            scope.onSelect();\n                            scope.$emit('change.af.tabs', elm);\n                        } else {\n                            scope.onDeselect();\n                        }\n                    });\n\n                    scope.disabled = false;\n                    if (attrs.disabled) {\n                        scope.$parent.$watch($parse(attrs.disabled), function (value) {\n                            scope.disabled = !!value;\n                        });\n                    }\n\n                    scope.select = function () {\n                        if (!scope.disabled) {\n                            scope.active = true;\n                        }\n                    };\n\n                    tabsetCtrl.addTab(scope);\n                    scope.$on('$destroy', function () {\n                        tabsetCtrl.removeTab(scope);\n                    });\n\n                    //We need to transclude later, once the content container is ready.\n                    //when this link happens, we're inside a tab heading.\n                    scope.$transcludeFn = transclude;\n                };\n            }\n        };\n    }]).directive('tabHeadingTransclude', function () {\n        'ngInject';\n\n        return {\n            restrict: 'A',\n            require: '^tab',\n            link: function link(scope, elm, attrs, tabCtrl) {\n                scope.$watch('headingElement', function updateHeadingElement(heading) {\n                    if (heading) {\n                        elm.html('');\n                        elm.append(heading);\n                    }\n                });\n            }\n        };\n    }).directive('tabContentTransclude', function () {\n        'ngInject';\n\n        return {\n            restrict: 'A',\n            require: '^tabset',\n            link: function link(scope, elm, attrs) {\n                var tab = scope.$eval(attrs.tabContentTransclude);\n\n                //Now our tab is ready to be transcluded: both the tab heading area\n                //and the tab content area are loaded.  Transclude 'em both.\n                tab.$transcludeFn(tab.$parent, function (contents) {\n                    angular.forEach(contents, function (node) {\n                        if (isTabHeading(node)) {\n                            //Let tabHeadingTransclude know.\n                            tab.headingElement = node;\n                        } else {\n                            elm.append(node);\n                        }\n                    });\n                });\n            }\n        };\n\n        function isTabHeading(node) {\n            return node.tagName && (node.hasAttribute('tab-heading') || node.hasAttribute('data-tab-heading') || node.tagName.toLowerCase() === 'tab-heading' || node.tagName.toLowerCase() === 'data-tab-heading');\n        }\n    });\n\n    (function () {\n        angular.module(\"mm.foundation.tabs\").run([\"$templateCache\", function ($templateCache) {\n            $templateCache.put(\"template/tabs/tab.html\", \"<li class=\\\"tabs-title\\\" ng-class=\\\"{\\'is-active\\': active}\\\">\\n    <a href=\\\"\\\" ng-click=\\\"select()\\\" ng-attr-aria-selected=\\\"{{active}}\\\" tab-heading-transclude>{{heading}}</a>\\n</li>\\n\");\n            $templateCache.put(\"template/tabs/tabset-horizontal.html\", \"<div class=\\\"tabbable\\\">\\n  <ul class=\\\"tabs\\\" ng-transclude></ul>\\n  <div class=\\\"tabs-content\\\">\\n    <div class=\\\"tabs-panel\\\"\\n      ng-repeat=\\\"tab in tabs\\\"\\n      ng-class=\\\"{\\'is-active\\': tab.active}\\\" \\n      aria-hidden=\\\\\\\"{{!tab.active}}\\\\\\\">\\n      <div tab-content-transclude=\\\"tab\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\");\n            $templateCache.put(\"template/tabs/tabset-vertical.html\", \"<div class=\\\"tabbable row collapse\\\">\\n  <div class=\\\"medium-3 columns\\\">\\n    <ul class=\\\"tabs vertical\\\" ng-transclude></ul>\\n  </div>\\n  <div class=\\\"medium-9 columns\\\">\\n    <div class=\\\"tabs-content vertical\\\">\\n      <div class=\\\"tabs-panel\\\"\\n        ng-repeat=\\\"tab in tabs\\\"\\n        ng-class=\\\"{\\'is-active\\': tab.active}\\\" aria-hidden=\\\\\\\"{{!tab.active}}\\\\\\\">\\n        <div tab-content-transclude=\\\"tab\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\");\n        }]);\n    })();\n    'use strict';\n    /**\n     * The following features are still outstanding: animation as a\n     * function, placement as a function, inside, support for more triggers than\n     * just mouse enter/leave, html tooltips, and selector delegation.\n     */\n    angular.module('mm.foundation.tooltip', ['mm.foundation.position', 'mm.foundation.bindHtml'])\n\n    /**\n     * The $tooltip service creates tooltip- and popover-like directives as well as\n     * houses global options for them.\n     */\n    .provider('$tooltip', function () {\n        'ngInject';\n        // The default options tooltip and popover.\n\n        var defaultOptions = {\n            placement: 'top',\n            popupDelay: 0\n        };\n\n        // Default hide triggers for each show trigger\n        var triggerMap = {\n            'mouseover': 'mouseout',\n            'click': 'click',\n            'focus': 'blur'\n        };\n\n        // The options specified to the provider globally.\n        var globalOptions = {};\n\n        /**\n         * `options({})` allows global configuration of all tooltips in the\n         * application.\n         *\n         *   var app = angular.module( 'App', ['mm.foundation.tooltip'], function( $tooltipProvider ) {\n         *     // place tooltips left instead of top by default\n         *     $tooltipProvider.options( { placement: 'left' } );\n         *   });\n         */\n        this.options = function (value) {\n            angular.extend(globalOptions, value);\n        };\n\n        /**\n         * This allows you to extend the set of trigger mappings available. E.g.:\n         *\n         *   $tooltipProvider.setTriggers( 'openTrigger': 'closeTrigger' );\n         */\n        this.setTriggers = function setTriggers(triggers) {\n            angular.extend(triggerMap, triggers);\n        };\n\n        /**\n         * This is a helper function for translating camel-case to snake-case.\n         */\n        function snake_case(name) {\n            var regexp = /[A-Z]/g;\n            var separator = '-';\n            return name.replace(regexp, function (letter, pos) {\n                return (pos ? separator : '') + letter.toLowerCase();\n            });\n        }\n\n        /**\n         * Returns the actual instance of the $tooltip service.\n         * TODO support multiple triggers\n         */\n        this.$get = ['$window', '$compile', '$timeout', '$parse', '$document', '$position', '$interpolate', '$animate', function ($window, $compile, $timeout, $parse, $document, $position, $interpolate, $animate) {\n            'ngInject';\n\n            return function $tooltip(type, prefix, defaultTriggerShow) {\n                var options = angular.extend({}, defaultOptions, globalOptions);\n\n                /**\n                 * Returns an object of show and hide triggers.\n                 *\n                 * If a trigger is supplied,\n                 * it is used to show the tooltip; otherwise, it will use the `trigger`\n                 * option passed to the `$tooltipProvider.options` method; else it will\n                 * default to the trigger supplied to this directive factory.\n                 *\n                 * The hide trigger is based on the show trigger. If the `trigger` option\n                 * was passed to the `$tooltipProvider.options` method, it will use the\n                 * mapped trigger from `triggerMap` or the passed trigger if the map is\n                 * undefined; otherwise, it uses the `triggerMap` value of the show\n                 * trigger; else it will just use the show trigger.\n                 */\n                function getTriggers(trigger) {\n                    var show = (trigger || options.trigger || defaultTriggerShow).split(' ');\n                    var hide = show.map(function (trigger) {\n                        return triggerMap[trigger] || trigger;\n                    });\n                    return {\n                        show: show,\n                        hide: hide\n                    };\n                }\n\n                var directiveName = snake_case(type);\n\n                var startSym = $interpolate.startSymbol();\n                var endSym = $interpolate.endSymbol();\n                var template = '<div ' + directiveName + '-popup ' + 'title=\"' + startSym + 'tt_title' + endSym + '\" ' + 'content=\"' + startSym + 'tt_content' + endSym + '\" ' + 'placement=\"' + startSym + 'tt_placement' + endSym + '\" ' + 'is-open=\"tt_isOpen\"' + '>' + '</div>';\n\n                return {\n                    restrict: 'EA',\n                    scope: true,\n                    compile: function compile(tElem) {\n                        var tooltipLinker = $compile(template);\n\n                        return function link(scope, element, attrs) {\n                            var $body = angular.element(document.querySelector('body'));\n                            var tooltip;\n                            var popupTimeout;\n                            var appendToBody = angular.isDefined(options.appendToBody) ? options.appendToBody : false;\n                            var triggers = getTriggers(undefined);\n                            var hasEnableExp = angular.isDefined(attrs[prefix + 'Enable']);\n\n                            var positionTooltip = function positionTooltip() {\n                                var position;\n                                var ttWidth;\n                                var ttHeight;\n                                var ttPosition;\n                                // Get the position of the directive element.\n                                position = appendToBody ? $position.offset(element) : $position.position(element);\n\n                                // Get the height and width of the tooltip so we can center it.\n                                ttWidth = tooltip.prop('offsetWidth');\n                                ttHeight = tooltip.prop('offsetHeight');\n\n                                var scrollTop = $window.pageYOffset;\n                                if (scope.tt_placement === 'top' && position.top - scrollTop - ttHeight - 20 < 0) {\n                                    scope.tt_placement = 'bottom';\n                                }\n\n                                var tt_remSize = parseFloat(getComputedStyle(tooltip[0]).fontSize);\n                                // Calculate the tooltip's top and left coordinates to center it with\n                                // this directive.\n                                switch (scope.tt_placement) {\n                                    case 'right':\n                                        ttPosition = {\n                                            top: position.top + position.height / 2 - ttHeight / 2,\n                                            left: position.left + position.width + 10\n                                        };\n                                        break;\n                                    case 'bottom':\n                                        ttPosition = {\n                                            top: position.top + position.height + 10,\n                                            left: position.left - 2.25 * tt_remSize + element[0].offsetWidth / 2\n                                        };\n                                        break;\n                                    case 'left':\n                                        ttPosition = {\n                                            top: position.top + position.height / 2 - ttHeight / 2,\n                                            left: position.left - ttWidth - 10\n                                        };\n                                        break;\n                                    default:\n                                        //top\n                                        ttPosition = {\n                                            top: position.top - ttHeight - 10,\n                                            left: position.left - 2.25 * tt_remSize + element[0].offsetWidth / 2\n                                        };\n                                        break;\n                                }\n\n                                ttPosition.top += 'px';\n                                ttPosition.left += 'px';\n\n                                // Now set the calculated positioning.\n                                tooltip.css(ttPosition);\n                            };\n\n                            // By default, the tooltip is not open.\n                            // TODO add ability to start tooltip opened\n                            scope.tt_isOpen = false;\n\n                            function toggleTooltipBind() {\n                                if (!scope.tt_isOpen) {\n                                    showTooltipBind();\n                                } else {\n                                    hideTooltipBind();\n                                }\n                            }\n\n                            // Show the tooltip with delay if specified, otherwise show it immediately\n                            function showTooltipBind() {\n                                if (hasEnableExp && !scope.$eval(attrs[prefix + 'Enable'])) {\n                                    return;\n                                }\n                                if (scope.tt_popupDelay) {\n                                    popupTimeout = $timeout(show, scope.tt_popupDelay, false);\n                                    popupTimeout.then(function (reposition) {\n                                        reposition();\n                                    }, angular.noop);\n                                } else {\n                                    show()();\n                                }\n                            }\n\n                            function closeOnClick(e) {\n                                var elementContents = Array.prototype.slice.apply(element[0].querySelectorAll('*'));\n\n                                if (!elementContents.length) {\n                                    return;\n                                }\n                                var isOuterElement = elementContents.every(function (node) {\n                                    return node !== e.target;\n                                });\n                                if (isOuterElement) {\n                                    hide();\n                                    scope.$apply();\n                                }\n                            }\n\n                            function hideTooltipBind() {\n                                scope.$apply(function () {\n                                    hide();\n                                });\n                            }\n\n                            // Show the tooltip popup element.\n                            function show() {\n\n                                // Don't show empty tooltips.\n                                if (!scope.tt_content) {\n                                    return angular.noop;\n                                }\n\n                                createTooltip();\n\n                                // Set the initial positioning.\n                                tooltip.css({\n                                    top: 0,\n                                    left: 0\n                                });\n\n                                // Now we add it to the DOM because need some info about it. But it's not\n                                // visible yet anyway.\n                                if (appendToBody) {\n                                    // $document.find('body').append(tooltip);\n                                    // $document.find('body')\n                                    $animate.enter(tooltip, $document.find('body'));\n                                } else {\n                                    $animate.enter(tooltip, element.parent(), element);\n                                    // element.after(tooltip);\n                                }\n\n                                positionTooltip();\n\n                                // And show the tooltip.\n                                scope.tt_isOpen = true;\n\n                                // Make the tooltip close when background is clicked\n                                $body.on('click', closeOnClick);\n\n                                scope.$digest(); // digest required as $apply is not called\n\n                                // Return positioning function as promise callback for correct\n                                // positioning after draw.\n                                return positionTooltip;\n                            }\n\n                            // Hide the tooltip popup element.\n                            function hide() {\n                                // First things first: we don't show it anymore.\n                                scope.tt_isOpen = false;\n\n                                //if tooltip is going to be shown after delay, we must cancel this\n                                $timeout.cancel(popupTimeout);\n\n                                // remove close click listener\n                                $body.off('click', closeOnClick);\n                                removeTooltip();\n                            }\n\n                            function createTooltip() {\n                                // There can only be one tooltip element per directive shown at once.\n                                if (tooltip) {\n                                    removeTooltip();\n                                }\n                                tooltip = tooltipLinker(scope, function () {});\n\n                                // Get contents rendered into the tooltip\n                                scope.$digest();\n                            }\n\n                            function removeTooltip() {\n                                if (tooltip) {\n                                    $animate.leave(tooltip);\n                                    // tooltip.remove();\n                                    tooltip = null;\n                                }\n                            }\n\n                            /**\n                             * Observe the relevant attributes.\n                             */\n                            attrs.$observe(type, function (val) {\n                                scope.tt_content = val;\n\n                                if (!val && scope.tt_isOpen) {\n                                    hide();\n                                }\n                            });\n\n                            attrs.$observe(prefix + 'Title', function (val) {\n                                scope.tt_title = val;\n                            });\n\n                            attrs[prefix + 'Placement'] = attrs[prefix + 'Placement'] || null;\n\n                            attrs.$observe(prefix + 'Placement', function (val) {\n                                scope.tt_placement = angular.isDefined(val) && val ? val : options.placement;\n                            });\n\n                            attrs[prefix + 'PopupDelay'] = attrs[prefix + 'PopupDelay'] || null;\n\n                            attrs.$observe(prefix + 'PopupDelay', function (val) {\n                                var delay = parseInt(val, 10);\n                                scope.tt_popupDelay = !isNaN(delay) ? delay : options.popupDelay;\n                            });\n\n                            var unregisterTriggers = function unregisterTriggers() {\n                                triggers.show.forEach(function (showTrigger, i) {\n                                    var hideTrigger = triggers.hide[i];\n                                    if (showTrigger === hideTrigger) {\n                                        element.off(showTrigger, toggleTooltipBind);\n                                    } else {\n                                        element.off(showTrigger, showTooltipBind);\n                                        element.off(hideTrigger, hideTooltipBind);\n                                    }\n                                });\n                            };\n\n                            attrs[prefix + 'Trigger'] = attrs[prefix + 'Trigger'] || null;\n\n                            attrs.$observe(prefix + 'Trigger', function (val) {\n                                unregisterTriggers();\n                                triggers = getTriggers(val);\n                                triggers.show.forEach(function (showTrigger, i) {\n                                    var hideTrigger = triggers.hide[i];\n                                    if (showTrigger === hideTrigger) {\n                                        element.bind(showTrigger, toggleTooltipBind);\n                                    } else {\n                                        element.bind(showTrigger, showTooltipBind);\n                                        element.bind(hideTrigger, hideTooltipBind);\n                                    }\n                                });\n                                element.on('keydown', function (e) {\n                                    if (e.which === 27) {\n                                        hideTooltipBind();\n                                    }\n                                });\n                            });\n\n                            attrs.$observe(prefix + 'AppendToBody', function (val) {\n                                appendToBody = angular.isDefined(val) ? $parse(val)(scope) : appendToBody;\n                            });\n\n                            // if a tooltip is attached to <body> we need to remove it on\n                            // location change as its parent scope will probably not be destroyed\n                            // by the change.\n                            if (appendToBody) {\n                                scope.$on('$locationChangeSuccess', function closeTooltipOnLocationChangeSuccess() {\n                                    if (scope.tt_isOpen) {\n                                        hide();\n                                    }\n                                });\n                            }\n\n                            // Make sure tooltip is destroyed and removed.\n                            scope.$on('$destroy', function onDestroyTooltip() {\n                                $timeout.cancel(popupTimeout);\n                                unregisterTriggers();\n                                removeTooltip();\n                            });\n                        };\n                    }\n                };\n            };\n        }];\n    }).directive('tooltipPopup', function () {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            replace: true,\n            scope: {\n                content: '@',\n                placement: '@',\n                isOpen: '&'\n            },\n            templateUrl: 'template/tooltip/tooltip-popup.html'\n        };\n    }).directive('tooltip', ['$tooltip', function ($tooltip) {\n        'ngInject';\n\n        return $tooltip('tooltip', 'tooltip', 'mouseover');\n    }]).directive('tooltipHtmlUnsafePopup', function () {\n        return {\n            restrict: 'EA',\n            replace: true,\n            scope: {\n                content: '@',\n                placement: '@',\n                isOpen: '&'\n            },\n            templateUrl: 'template/tooltip/tooltip-html-unsafe-popup.html'\n        };\n    }).directive('tooltipHtmlUnsafe', ['$tooltip', function ($tooltip) {\n        'ngInject';\n\n        return $tooltip('tooltipHtmlUnsafe', 'tooltip', 'mouseover');\n    }]);\n\n    (function () {\n        angular.module(\"mm.foundation.tooltip\").run([\"$templateCache\", function ($templateCache) {\n            $templateCache.put(\"template/tooltip/tooltip-html-unsafe-popup.html\", \"<div class=\\\"tooltip {{placement}}\\\" style=\\\"width: auto;\\\">\\n  <span bind-html-unsafe=\\\"content\\\"></span>\\n</div>\\n\");\n            $templateCache.put(\"template/tooltip/tooltip-popup.html\", \"<div class=\\\"tooltip {{placement}}\\\" style=\\\"width: auto;\\\">\\n  <span ng-bind=\\\"content\\\"></span>\\n</div>\\n\");\n        }]);\n    })();\n    angular.module(\"mm.foundation\", [\"mm.foundation.accordion\", \"mm.foundation.alert\", \"mm.foundation.bindHtml\", \"mm.foundation.buttons\", \"mm.foundation.drilldownMenu\", \"mm.foundation.dropdownMenu\", \"mm.foundation.dropdownToggle\", \"mm.foundation.mediaQueries\", \"mm.foundation.modal\", \"mm.foundation.offcanvas\", \"mm.foundation.orbit\", \"mm.foundation.pagination\", \"mm.foundation.position\", \"mm.foundation.progressbar\", \"mm.foundation.rating\", \"mm.foundation.tabs\", \"mm.foundation.tooltip\"]);\n});"],"sourceRoot":"assets/scripts/"}