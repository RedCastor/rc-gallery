{"version":3,"sources":["../bower_components/angular-json-pretty/dist/angular-json-pretty.min.js","../bower_components/what-input/dist/what-input.js"],"names":["n","t","e","exports","module","define","amd","JSONPretty","window","angular","r","a","o","replace","directive","restrict","scope","data","link","$watch","html","JSON","parse","stringify","root","factory","this","modules","installedModules","__webpack_require__","moduleId","id","loaded","call","m","c","p","document","ask","element","ignoreKeys","specificKeys","registerOnChange","unRegisterOnChange","docElem","documentElement","currentElement","currentInput","currentIntent","sessionStorage","getItem","eventTimer","formInputs","functionList","ignoreMap","specificMap","inputMap","keydown","keyup","mousedown","mousemove","MSPointerDown","MSPointerMove","pointerdown","pointermove","touchstart","isBuffering","isScrolling","mousePos","x","y","pointerMap","2","3","4","supportsPassive","opts","Object","defineProperty","get","addEventListener","addListeners","options","passive","PointerEvent","setInput","setIntent","MSPointerEvent","eventBuffer","detectWheel","setElement","clearElement","event","eventKey","which","value","type","pointerType","ignoreMatch","length","indexOf","specificMatch","shouldUpdate","setItem","doUpdate","activeElem","activeElement","nodeName","toLowerCase","setAttribute","fireFunctions","detectScrolling","target","classList","toString","removeAttribute","clearTimeout","setTimeout","createElement","undefined","onmousewheel","i","len","fn","screenX","screenY","Array","prototype","opt","arr","eventType","push","position","match","objPos","splice"],"mappings":"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","file":"main.js","sourcesContent":["!function(n,t,e){\"use strict\";\"object\"==typeof exports?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):n.JSONPretty=e()}(window,angular,function(){\"use strict\";var n=function(n,t,e,r,a){var s=\"<span class=json-key>\",c=\"<span class=json-value>\",i=\"<span class=json-string>\",o=t||\"\";return e&&(o=o+s+e.replace(/[\": ]/g,\"\")+\"</span>: \"),r&&(o=o+('\"'==r[0]?i:c)+r+\"</span>\"),o+(a||\"\")},t=function(t){var e=/^( *)(\"[\\w]+\": )?(\"[^\"]*\"|[\\w.+-]*)?([,[{])?$/gm,r=t;try{return\"string\"==typeof t&&(r=JSON.parse(t)),JSON.stringify(r,null,3).replace(/&/g,\"&amp;\").replace(/\\\\\"/g,\"&quot;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(e,n)}catch(a){return\"invalid JSON\"}},e=angular.module(\"angular-json-pretty\",[]),r=function(){return{restrict:\"A\",scope:{data:\"=\"},link:function(n,e){n.$watch(\"data\",function(n){n&&e.html(t(n))},!0)}}};return e.directive(\"jsonPretty\",[r]),e});\n","/**\n * what-input - A global utility for tracking the current input method (mouse, keyboard or touch).\n * @version v5.1.3\n * @link https://github.com/ten1seven/what-input\n * @license MIT\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"whatInput\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"whatInput\"] = factory();\n\telse\n\t\troot[\"whatInput\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tmodule.exports = function () {\n\t  /*\n\t   * bail out if there is no document or window\n\t   * (i.e. in a node/non-DOM environment)\n\t   *\n\t   * Return a stubbed API instead\n\t   */\n\t  if (typeof document === 'undefined' || typeof window === 'undefined') {\n\t    return {\n\t      // always return \"initial\" because no interaction will ever be detected\n\t      ask: function ask() {\n\t        return 'initial';\n\t      },\n\n\t      // always return null\n\t      element: function element() {\n\t        return null;\n\t      },\n\n\t      // no-op\n\t      ignoreKeys: function ignoreKeys() {},\n\n\t      // no-op\n\t      specificKeys: function specificKeys() {},\n\n\t      // no-op\n\t      registerOnChange: function registerOnChange() {},\n\n\t      // no-op\n\t      unRegisterOnChange: function unRegisterOnChange() {}\n\t    };\n\t  }\n\n\t  /*\n\t   * variables\n\t   */\n\n\t  // cache document.documentElement\n\t  var docElem = document.documentElement;\n\n\t  // currently focused dom element\n\t  var currentElement = null;\n\n\t  // last used input type\n\t  var currentInput = 'initial';\n\n\t  // last used input intent\n\t  var currentIntent = currentInput;\n\n\t  // check for sessionStorage support\n\t  // then check for session variables and use if available\n\t  try {\n\t    if (window.sessionStorage.getItem('what-input')) {\n\t      currentInput = window.sessionStorage.getItem('what-input');\n\t    }\n\n\t    if (window.sessionStorage.getItem('what-intent')) {\n\t      currentIntent = window.sessionStorage.getItem('what-intent');\n\t    }\n\t  } catch (e) {}\n\n\t  // event buffer timer\n\t  var eventTimer = null;\n\n\t  // form input types\n\t  var formInputs = ['input', 'select', 'textarea'];\n\n\t  // empty array for holding callback functions\n\t  var functionList = [];\n\n\t  // list of modifier keys commonly used with the mouse and\n\t  // can be safely ignored to prevent false keyboard detection\n\t  var ignoreMap = [16, // shift\n\t  17, // control\n\t  18, // alt\n\t  91, // Windows key / left Apple cmd\n\t  93 // Windows menu / right Apple cmd\n\t  ];\n\n\t  var specificMap = [];\n\n\t  // mapping of events to input types\n\t  var inputMap = {\n\t    keydown: 'keyboard',\n\t    keyup: 'keyboard',\n\t    mousedown: 'mouse',\n\t    mousemove: 'mouse',\n\t    MSPointerDown: 'pointer',\n\t    MSPointerMove: 'pointer',\n\t    pointerdown: 'pointer',\n\t    pointermove: 'pointer',\n\t    touchstart: 'touch'\n\n\t    // boolean: true if touch buffer is active\n\t  };var isBuffering = false;\n\n\t  // boolean: true if the page is being scrolled\n\t  var isScrolling = false;\n\n\t  // store current mouse position\n\t  var mousePos = {\n\t    x: null,\n\t    y: null\n\n\t    // map of IE 10 pointer events\n\t  };var pointerMap = {\n\t    2: 'touch',\n\t    3: 'touch', // treat pen like touch\n\t    4: 'mouse'\n\n\t    // check support for passive event listeners\n\t  };var supportsPassive = false;\n\n\t  try {\n\t    var opts = Object.defineProperty({}, 'passive', {\n\t      get: function get() {\n\t        supportsPassive = true;\n\t      }\n\t    });\n\n\t    window.addEventListener('test', null, opts);\n\t  } catch (e) {}\n\n\t  /*\n\t   * set up\n\t   */\n\n\t  var setUp = function setUp() {\n\t    // add correct mouse wheel event mapping to `inputMap`\n\t    inputMap[detectWheel()] = 'mouse';\n\n\t    addListeners();\n\t    doUpdate('input');\n\t    doUpdate('intent');\n\t  };\n\n\t  /*\n\t   * events\n\t   */\n\n\t  var addListeners = function addListeners() {\n\t    // `pointermove`, `MSPointerMove`, `mousemove` and mouse wheel event binding\n\t    // can only demonstrate potential, but not actual, interaction\n\t    // and are treated separately\n\t    var options = supportsPassive ? { passive: true } : false;\n\n\t    // pointer events (mouse, pen, touch)\n\t    if (window.PointerEvent) {\n\t      window.addEventListener('pointerdown', setInput);\n\t      window.addEventListener('pointermove', setIntent);\n\t    } else if (window.MSPointerEvent) {\n\t      window.addEventListener('MSPointerDown', setInput);\n\t      window.addEventListener('MSPointerMove', setIntent);\n\t    } else {\n\t      // mouse events\n\t      window.addEventListener('mousedown', setInput);\n\t      window.addEventListener('mousemove', setIntent);\n\n\t      // touch events\n\t      if ('ontouchstart' in window) {\n\t        window.addEventListener('touchstart', eventBuffer, options);\n\t        window.addEventListener('touchend', setInput);\n\t      }\n\t    }\n\n\t    // mouse wheel\n\t    window.addEventListener(detectWheel(), setIntent, options);\n\n\t    // keyboard events\n\t    window.addEventListener('keydown', eventBuffer);\n\t    window.addEventListener('keyup', eventBuffer);\n\n\t    // focus events\n\t    window.addEventListener('focusin', setElement);\n\t    window.addEventListener('focusout', clearElement);\n\t  };\n\n\t  // checks conditions before updating new input\n\t  var setInput = function setInput(event) {\n\t    // only execute if the event buffer timer isn't running\n\t    if (!isBuffering) {\n\t      var eventKey = event.which;\n\t      var value = inputMap[event.type];\n\n\t      if (value === 'pointer') {\n\t        value = pointerType(event);\n\t      }\n\n\t      var ignoreMatch = !specificMap.length && ignoreMap.indexOf(eventKey) === -1;\n\n\t      var specificMatch = specificMap.length && specificMap.indexOf(eventKey) !== -1;\n\n\t      var shouldUpdate = value === 'keyboard' && eventKey && (ignoreMatch || specificMatch) || value === 'mouse' || value === 'touch';\n\n\t      if (currentInput !== value && shouldUpdate) {\n\t        currentInput = value;\n\n\t        try {\n\t          window.sessionStorage.setItem('what-input', currentInput);\n\t        } catch (e) {}\n\n\t        doUpdate('input');\n\t      }\n\n\t      if (currentIntent !== value && shouldUpdate) {\n\t        // preserve intent for keyboard typing in form fields\n\t        var activeElem = document.activeElement;\n\t        var notFormInput = activeElem && activeElem.nodeName && formInputs.indexOf(activeElem.nodeName.toLowerCase()) === -1;\n\n\t        if (notFormInput) {\n\t          currentIntent = value;\n\n\t          try {\n\t            window.sessionStorage.setItem('what-intent', currentIntent);\n\t          } catch (e) {}\n\n\t          doUpdate('intent');\n\t        }\n\t      }\n\t    }\n\t  };\n\n\t  // updates the doc and `inputTypes` array with new input\n\t  var doUpdate = function doUpdate(which) {\n\t    docElem.setAttribute('data-what' + which, which === 'input' ? currentInput : currentIntent);\n\n\t    fireFunctions(which);\n\t  };\n\n\t  // updates input intent for `mousemove` and `pointermove`\n\t  var setIntent = function setIntent(event) {\n\t    // test to see if `mousemove` happened relative to the screen to detect scrolling versus mousemove\n\t    detectScrolling(event);\n\n\t    // only execute if the event buffer timer isn't running\n\t    // or scrolling isn't happening\n\t    if (!isBuffering && !isScrolling) {\n\t      var value = inputMap[event.type];\n\t      if (value === 'pointer') {\n\t        value = pointerType(event);\n\t      }\n\n\t      if (currentIntent !== value) {\n\t        currentIntent = value;\n\n\t        try {\n\t          window.sessionStorage.setItem('what-intent', currentIntent);\n\t        } catch (e) {}\n\n\t        doUpdate('intent');\n\t      }\n\t    }\n\t  };\n\n\t  var setElement = function setElement(event) {\n\t    if (!event.target.nodeName) {\n\t      // If nodeName is undefined, clear the element\n\t      // This can happen if click inside an <svg> element.\n\t      clearElement();\n\t      return;\n\t    }\n\n\t    currentElement = event.target.nodeName.toLowerCase();\n\t    docElem.setAttribute('data-whatelement', currentElement);\n\n\t    if (event.target.classList && event.target.classList.length) {\n\t      docElem.setAttribute('data-whatclasses', event.target.classList.toString().replace(' ', ','));\n\t    }\n\t  };\n\n\t  var clearElement = function clearElement() {\n\t    currentElement = null;\n\n\t    docElem.removeAttribute('data-whatelement');\n\t    docElem.removeAttribute('data-whatclasses');\n\t  };\n\n\t  // buffers events that frequently also fire mouse events\n\t  var eventBuffer = function eventBuffer(event) {\n\t    // set the current input\n\t    setInput(event);\n\n\t    // clear the timer if it happens to be running\n\t    window.clearTimeout(eventTimer);\n\n\t    // set the isBuffering to `true`\n\t    isBuffering = true;\n\n\t    // run the timer\n\t    eventTimer = window.setTimeout(function () {\n\t      // if the timer runs out, set isBuffering back to `false`\n\t      isBuffering = false;\n\t    }, 100);\n\t  };\n\n\t  /*\n\t   * utilities\n\t   */\n\n\t  var pointerType = function pointerType(event) {\n\t    if (typeof event.pointerType === 'number') {\n\t      return pointerMap[event.pointerType];\n\t    } else {\n\t      // treat pen like touch\n\t      return event.pointerType === 'pen' ? 'touch' : event.pointerType;\n\t    }\n\t  };\n\n\t  // detect version of mouse wheel event to use\n\t  // via https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n\t  var detectWheel = function detectWheel() {\n\t    var wheelType = void 0;\n\n\t    // Modern browsers support \"wheel\"\n\t    if ('onwheel' in document.createElement('div')) {\n\t      wheelType = 'wheel';\n\t    } else {\n\t      // Webkit and IE support at least \"mousewheel\"\n\t      // or assume that remaining browsers are older Firefox\n\t      wheelType = document.onmousewheel !== undefined ? 'mousewheel' : 'DOMMouseScroll';\n\t    }\n\n\t    return wheelType;\n\t  };\n\n\t  // runs callback functions\n\t  var fireFunctions = function fireFunctions(type) {\n\t    for (var i = 0, len = functionList.length; i < len; i++) {\n\t      if (functionList[i].type === type) {\n\t        functionList[i].fn.call(undefined, type === 'input' ? currentInput : currentIntent);\n\t      }\n\t    }\n\t  };\n\n\t  // finds matching element in an object\n\t  var objPos = function objPos(match) {\n\t    for (var i = 0, len = functionList.length; i < len; i++) {\n\t      if (functionList[i].fn === match) {\n\t        return i;\n\t      }\n\t    }\n\t  };\n\n\t  var detectScrolling = function detectScrolling(event) {\n\t    if (mousePos['x'] !== event.screenX || mousePos['y'] !== event.screenY) {\n\t      isScrolling = false;\n\n\t      mousePos['x'] = event.screenX;\n\t      mousePos['y'] = event.screenY;\n\t    } else {\n\t      isScrolling = true;\n\t    }\n\t  };\n\n\t  /*\n\t   * init\n\t   */\n\n\t  // don't start script unless browser cuts the mustard\n\t  // (also passes if polyfills are used)\n\t  if ('addEventListener' in window && Array.prototype.indexOf) {\n\t    setUp();\n\t  }\n\n\t  /*\n\t   * api\n\t   */\n\n\t  return {\n\t    // returns string: the current input type\n\t    // opt: 'intent'|'input'\n\t    // 'input' (default): returns the same value as the `data-whatinput` attribute\n\t    // 'intent': includes `data-whatintent` value if it's different than `data-whatinput`\n\t    ask: function ask(opt) {\n\t      return opt === 'intent' ? currentIntent : currentInput;\n\t    },\n\n\t    // returns string: the currently focused element or null\n\t    element: function element() {\n\t      return currentElement;\n\t    },\n\n\t    // overwrites ignored keys with provided array\n\t    ignoreKeys: function ignoreKeys(arr) {\n\t      ignoreMap = arr;\n\t    },\n\n\t    // overwrites specific char keys to update on\n\t    specificKeys: function specificKeys(arr) {\n\t      specificMap = arr;\n\t    },\n\n\t    // attach functions to input and intent \"events\"\n\t    // funct: function to fire on change\n\t    // eventType: 'input'|'intent'\n\t    registerOnChange: function registerOnChange(fn, eventType) {\n\t      functionList.push({\n\t        fn: fn,\n\t        type: eventType || 'input'\n\t      });\n\t    },\n\n\t    unRegisterOnChange: function unRegisterOnChange(fn) {\n\t      var position = objPos(fn);\n\n\t      if (position || position === 0) {\n\t        functionList.splice(position, 1);\n\t      }\n\t    }\n\t  };\n\t}();\n\n/***/ })\n/******/ ])\n});\n;"],"sourceRoot":"assets/scripts/"}